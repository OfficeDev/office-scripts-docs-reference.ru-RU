{
    "title": "Конфигурация экстрактора API",
    "description": "Описывает, как средство экстрактора API будет обрабатывать проект.",
    "type": "object",
    "properties": {
        "$schema": {
            "description": "Это необязательное ключевое слово, которое является частью стандарта схемы JSON, объявляет URL-адрес схемы, который соответствует файлу. Редакторы могут скачать схему и использовать ее для синтаксиса выделения.",
            "type": "string"
        },
        "compiler": {
            "description": "Определяет, как будет вызываться компилятор TypeScript. Тип compiler.configвыбирает тип конфигурации. В зависимости от типа конфигурации доступны различные параметры.",
            "type": "object",
            "oneOf": [
                {
                    "type": "object",
                    "properties": {
                        "configType": {
                            "description": "configType=tsconfig указывает, что параметры компиляторов будут взяты из tsconfig.jsфайла",
                            "type": "string",
                            "enum": [
                                "tsconfig"
                            ]
                        },
                        "rootFolder": {
                            "description": "Корневая папка для проекта. Эта папка обычно содержит tsconfig.jsи package.jsв файлах config.",
                            "type": "string"
                        },
                        "overrideTsconfig": {
                            "description": "Предоставляет уже tsconfig.jsпо содержимому, соответствующему схеме tsconfig TypeScript. Если не будет пропущено, tsconfig.jsв файле будет http://json.schemastore.org/tsconfig прочитано.",
                            "type": "object"
                        }
                    },
                    "required": [
                        "configType",
                        "rootFolder"
                    ],
                    "additionalProperties": false
                },
                {
                    "type": "object",
                    "properties": {
                        "configType": {
                            "description": "configType=runtime указывает, что параметры компиляторов будут предоставлены цепочкой инструментов с помощью API времени запуска",
                            "type": "string",
                            "enum": [
                                "runtime"
                            ]
                        }
                    },
                    "required": [
                        "configType"
                    ],
                    "additionalProperties": false
                }
            ]
        },
        "project": {
            "description": "Описывает конкретный проект, который будет проанализирован.",
            "type": "object",
            "properties": {
                "entryPointSourceFile": {
                    "description": "Указывает исходный файл TypeScript, который будет рассматриваться как точка входа для компиляции.",
                    "type": "string"
                },
                "externalJsonFileFolders": {
                    "description": "Указывает папки, содержащие дополнительные файлы JSON APJ (*.api.js), которые будут консультироваться во время анализа.  Это полезно для предоставления аннотации для внешних пакетов, которые не были построены с помощью экстрактора API.",
                    "type": "string"
                }
            },
            "required": [
                "entryPointSourceFile"
            ],
            "additionalProperties": false
        },
        "policies": {
            "description": "Эти политики определяют, как экстрактор API проверяет различные методы разработки API.",
            "type": "object",
            "properties": {
                "namespaceSupport": {
                    "description": "Контролирует, как экстрактор API обрабатывает ключевое слово TypeScript в области имен:\n\nконсервативные пространства имен (по умолчанию) могут использоваться только для представления таблиц констант\n\nразрешено произвольное вложение пространств имен",
                    "type": "string",
                    "enum": [
                        "conservative",
                        "permissive"
                    ]
                }
            },
            "additionalProperties": false
        },
        "apiReviewFile": {
            "description": "Настраивает процесс сгенерировать файлы обзоров API (*.api.ts).",
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Нужно ли создавать файлы отзывов вообще.  Значение по умолчанию: true.",
                    "type": "boolean"
                },
                "apiReviewFolder": {
                    "description": "Путь файла папки, содержащей файл API для проверки, относительно папки проекта. По умолчанию значение \"./etc\".",
                    "type": "string"
                },
                "tempFolder": {
                    "description": "Отчет *.api.ts сохранен в этой папке.  Во время производственной сборки временный файл сравнивается с файлом в apiReviewFolder; если имеются различия, и будет отчитаться об ошибке. По умолчанию значение \"./temp\".",
                    "type": "string"
                }
            },
            "required": [
                "enabled"
            ],
            "additionalProperties": false
        },
        "apiJsonFile": {
            "description": "Настраивает процесс сгенерировать файлы API JSON (*.api.js) .",
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Нужно ли создавать файлы API JSON вообще.  Значение по умолчанию: true.",
                    "type": "boolean"
                },
                "outputFolder": {
                    "description": "Указывает, где должен быть .api.jsфайл. По умолчанию значение \"./dist\"",
                    "type": "string"
                }
            },
            "required": [
                "enabled"
            ],
            "additionalProperties": false
        }
    },
    "required": [
        "compiler",
        "project"
    ],
    "additionalProperties": false
}