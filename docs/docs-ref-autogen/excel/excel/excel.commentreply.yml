### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentReply:class'
    summary: Представляет ответ на комментарий в книге.
    name: Excel.CommentReply
    fullName: Excel.CommentReply
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.CommentReply#authorEmail:member'
      - 'excel!Excel.CommentReply#authorName:member'
      - 'excel!Excel.CommentReply#content:member'
      - 'excel!Excel.CommentReply#context:member'
      - 'excel!Excel.CommentReply#creationDate:member'
      - 'excel!Excel.CommentReply#delete:member(1)'
      - 'excel!Excel.CommentReply#getLocation:member(1)'
      - 'excel!Excel.CommentReply#getParentComment:member(1)'
      - 'excel!Excel.CommentReply#id:member'
      - 'excel!Excel.CommentReply#load:member(1)'
      - 'excel!Excel.CommentReply#load:member(2)'
      - 'excel!Excel.CommentReply#mentions:member'
      - 'excel!Excel.CommentReply#richContent:member'
      - 'excel!Excel.CommentReply#set:member(1)'
      - 'excel!Excel.CommentReply#updateMentions:member(1)'
  - uid: 'excel!Excel.CommentReply#authorEmail:member'
    summary: Получает электронную почту автора ответа на примечание.
    name: authorEmail
    fullName: authorEmail
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.CommentReply#authorName:member'
    summary: Получает имя автора ответа на примечание.
    name: authorName
    fullName: authorName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorName: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.CommentReply#content:member'
    summary: Получает или задает содержимое ответа на примечание. Строка является обычным текстом.
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Comments");
              let comment = sheet.comments.getItemAt(0);
              let reply = comment.replies.getItemAt(0);
              reply.load("content");
              // Sync to load the content of the comment reply.
              await context.sync();

              // Append "Please!" to the end of the comment reply.
              reply.content += " Please!";
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.CommentReply#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CommentReply#creationDate:member'
    summary: Получает время создания ответа на примечание.
    name: creationDate
    fullName: creationDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type:
          - '!Date:interface'
  - uid: 'excel!Excel.CommentReply#delete:member(1)'
    summary: Удаляет ответ на примечание.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              // Remove the first comment reply from this worksheet's first comment.
              let sheet = context.workbook.worksheets.getItem("Comments");
              let comment = sheet.comments.getItemAt(0);
              comment.replies.getItemAt(0).delete();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.CommentReply#getLocation:member(1)'
    summary: 'Получает ячейку, в которой находится этот ответ на комментарий.'
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.CommentReply#getParentComment:member(1)'
    summary: Получает родительский комментарий для этого ответа.
    name: getParentComment()
    fullName: getParentComment()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParentComment(): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
  - uid: 'excel!Excel.CommentReply#id:member'
    summary: Представляет идентификатор ответа на примечание. Только для чтения.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.CommentReply#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CommentReply#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.CommentReply;
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.CommentReply#mentions:member'
    summary: 'Получает объекты (например, людей), которые упоминаются в комментариях.'
    name: mentions
    fullName: mentions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly mentions: Excel.CommentMention[];'
      return:
        type:
          - 'excel!Excel.CommentReply#mentions~0:complex'
  - uid: 'excel!Excel.CommentReply#richContent:member'
    summary: 'Получает форматированный текст комментария (например, упоминания в комментариях). Эта строка не предназначена для отображения конечным пользователям. Надстройка должна использовать эту надстройку только для анализа форматированного содержимого комментариев.'
    name: richContent
    fullName: richContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richContent: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.CommentReply#set:member(1)'
    summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.CommentReply): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.CommentReply:class'
  - uid: 'excel!Excel.CommentReply#updateMentions:member(1)'
    summary: Обновляет содержимое комментария с помощью специально отформатированной строки и списка упоминаний.
    name: updateMentions(contentWithMentions)
    fullName: updateMentions(contentWithMentions)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'updateMentions(contentWithMentions: Excel.CommentRichContent): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: contentWithMentions
          description: 'Содержимое комментария. Содержит особую отформатированную строку и список упоминаний, которые будут проанализированы в строку при их отображении в Excel.'
          type:
            - 'excel!Excel.CommentRichContent:interface'
references:
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: '!Date:interface'
    name: Date
  - uid: 'excel!Excel.Range:class'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.Comment:class'
    name: Comment
    fullName: Excel.Comment
  - uid: 'excel!Excel.CommentReply:class'
    name: CommentReply
    fullName: Excel.CommentReply
  - uid: 'excel!Excel.CommentReply#mentions~0:complex'
    name: 'Excel.CommentMention[]'
    fullName: 'Excel.CommentMention[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentMention:interface'
        name: Excel.CommentMention
        fullName: Excel.CommentMention
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentRichContent:interface'
    name: CommentRichContent
    fullName: Excel.CommentRichContent