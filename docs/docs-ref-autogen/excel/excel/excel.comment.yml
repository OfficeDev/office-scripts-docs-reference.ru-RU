### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Comment:class'
    summary: Представляет комментарий в книге.
    name: Excel.Comment
    fullName: Excel.Comment
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.Comment#authorEmail:member'
      - 'excel!Excel.Comment#authorName:member'
      - 'excel!Excel.Comment#content:member'
      - 'excel!Excel.Comment#context:member'
      - 'excel!Excel.Comment#creationDate:member'
      - 'excel!Excel.Comment#delete:member(1)'
      - 'excel!Excel.Comment#getLocation:member(1)'
      - 'excel!Excel.Comment#id:member'
      - 'excel!Excel.Comment#load:member(1)'
      - 'excel!Excel.Comment#load:member(2)'
      - 'excel!Excel.Comment#mentions:member'
      - 'excel!Excel.Comment#replies:member'
      - 'excel!Excel.Comment#richContent:member'
      - 'excel!Excel.Comment#set:member(1)'
      - 'excel!Excel.Comment#updateMentions:member(1)'
  - uid: 'excel!Excel.Comment#authorEmail:member'
    summary: Получает электронную почту автора примечания.
    name: authorEmail
    fullName: authorEmail
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#authorName:member'
    summary: Получает имя автора примечания.
    name: authorName
    fullName: authorName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorName: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#content:member'
    summary: Получает или задает содержимое примечания. Строка является обычным текстом.
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Comments");
              let comment = sheet.comments.getItemAt(0);
              comment.content = "PLEASE add headers here.";
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Comment#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Comment#creationDate:member'
    summary: 'Получает время создания примечания. Возвращает значение null, если примечание было преобразовано из заметки, так как у примечания нет даты создания.'
    name: creationDate
    fullName: creationDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type:
          - '!Date:interface'
  - uid: 'excel!Excel.Comment#delete:member(1)'
    summary: Удаляет комментарий и все подключенные ответы.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              context.workbook.comments.getItemByCell("Comments!A2").delete();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Comment#getLocation:member(1)'
    summary: 'Получает ячейку, в которой находится этот комментарий.'
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.Comment#id:member'
    summary: Представляет идентификатор примечания. Только для чтения.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Comment#load:member(2)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Comment;
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let comment = context.workbook.comments.getItemByCell("Comments!A2");
              comment.load(["authorEmail", "authorName", "creationDate"]);
              await context.sync();

              console.log(`${comment.creationDate.toDateString()}: ${comment.authorName} (${comment.authorEmail})`);
              await context.sync();
          }
          ```
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`— Это строка с разделителями-запятыми, задающая свойства для `propertyNamesAndPaths.expand` загрузки и которая представляет собой строку с разделителями-запятыми, указывающую свойства навигации для загрузки.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Comment#mentions:member'
    summary: 'Получает объекты (например, людей), которые упоминаются в комментариях.'
    name: mentions
    fullName: mentions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly mentions: Excel.CommentMention[];'
      return:
        type:
          - 'excel!Excel.Comment#mentions~0:complex'
  - uid: 'excel!Excel.Comment#replies:member'
    summary: 'Представляет коллекцию объектов ответов, связанных с примечанием. Только для чтения.'
    name: replies
    fullName: replies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly replies: Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
  - uid: 'excel!Excel.Comment#richContent:member'
    summary: 'Получает форматированный текст комментария (например, упоминания в комментариях). Эта строка не предназначена для отображения конечным пользователям. Надстройка должна использовать эту надстройку только для анализа форматированного содержимого комментариев.'
    name: richContent
    fullName: richContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richContent: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#set:member(1)'
    summary: Задает одновременно несколько свойств объекта на основе существующего загруженного объекта.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Comment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Comment:class'
  - uid: 'excel!Excel.Comment#updateMentions:member(1)'
    summary: Обновляет содержимое комментария с помощью специально отформатированной строки и списка упоминаний.
    name: updateMentions(contentWithMentions)
    fullName: updateMentions(contentWithMentions)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'updateMentions(contentWithMentions: Excel.CommentRichContent): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: contentWithMentions
          description: 'Содержимое комментария. Содержит особую отформатированную строку и список упоминаний, которые будут проанализированы в строку при их отображении в Excel.'
          type:
            - 'excel!Excel.CommentRichContent:interface'
references:
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: '!Date:interface'
    name: Date
  - uid: 'excel!Excel.Range:class'
    name: Range
    fullName: Excel.Range
  - uid: 'excel!Excel.Comment:class'
    name: Comment
    fullName: Excel.Comment
  - uid: 'excel!Excel.Comment#mentions~0:complex'
    name: 'Excel.CommentMention[]'
    fullName: 'Excel.CommentMention[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentMention:interface'
        name: Excel.CommentMention
        fullName: Excel.CommentMention
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentReplyCollection:class'
    name: CommentReplyCollection
    fullName: Excel.CommentReplyCollection
  - uid: 'excel!Excel.CommentRichContent:interface'
    name: CommentRichContent
    fullName: Excel.CommentRichContent