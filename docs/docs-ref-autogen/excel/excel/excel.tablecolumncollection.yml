### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableColumnCollection:class'
    summary: 'Представляет коллекцию всех столбцов, включенных в таблицу.'
    name: Excel.TableColumnCollection
    fullName: Excel.TableColumnCollection
    langs:
      - typeScript
    type: class
    package: excel!
    children:
      - 'excel!Excel.TableColumnCollection#add:member(1)'
      - 'excel!Excel.TableColumnCollection#context:member'
      - 'excel!Excel.TableColumnCollection#count:member'
      - 'excel!Excel.TableColumnCollection#getCount:member(1)'
      - 'excel!Excel.TableColumnCollection#getItem:member(1)'
      - 'excel!Excel.TableColumnCollection#getItemAt:member(1)'
      - 'excel!Excel.TableColumnCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.TableColumnCollection#items:member'
      - 'excel!Excel.TableColumnCollection#load:member(1)'
  - uid: 'excel!Excel.TableColumnCollection#add:member(1)'
    summary: Добавляет новый столбец в таблицу.
    name: 'add(index, values, name)'
    fullName: 'add(index, values, name)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: index
          description: 'Необязательный. Определяет относительную позицию нового столбца. Если задано значение null или -1, столбец добавляется в конце. Столбцы с более высокими значениями индекса смещаются в сторону. Используется нулевой индекс.'
          type:
            - number
        - id: values
          description: Необязательный. Двухмерный массив неформатированных значений столбца таблицы.
          type:
            - 'excel!Excel.TableColumnCollection#add~0:complex'
        - id: name
          description: 'Необязательный параметр. Задает имя нового столбца. Если значение пустое, используется имя по умолчанию.'
          type:
            - string
  - uid: 'excel!Excel.TableColumnCollection#context:member'
    summary: 'Контекст запроса, связанный с объектом. Это подсоединяет процесс надстройки к процессу ведущего приложения Office.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableColumnCollection#count:member'
    summary: Возвращает количество столбцов в таблице. Только для чтения.
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumnCollection#getCount:member(1)'
    summary: Получает количество столбцов в таблице.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableColumnCollection#getItem:member(1)'
    summary: Возвращает объект column по имени или идентификатору.
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: key
          description: Имя или ИД столбца.
          type:
            - number | string
  - uid: 'excel!Excel.TableColumnCollection#getItemAt:member(1)'
    summary: Возвращает столбец на основании его позиции в коллекции.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: index
          description: Значение индекса получаемого объекта. Используется нулевой индекс.
          type:
            - number
  - uid: 'excel!Excel.TableColumnCollection#getItemOrNullObject:member(1)'
    summary: 'Возвращает объект столбца по имени или ИД. Если столбец не существует, возвращает пустой объект.'
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: key
          description: Имя или ИД столбца.
          type:
            - number | string
  - uid: 'excel!Excel.TableColumnCollection#items:member'
    summary: Получает загруженные дочерние элементы в этой коллекции.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableColumn[];'
      return:
        type:
          - 'excel!Excel.TableColumnCollection#items~0:complex'
  - uid: 'excel!Excel.TableColumnCollection#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств `context.sync()` необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.TableColumn:class'
    name: TableColumn
    fullName: Excel.TableColumn
  - uid: 'excel!Excel.TableColumnCollection#add~0:complex'
    name: Array<Array<boolean | string | number>> | boolean | string | number
    fullName: Array<Array<boolean | string | number>> | boolean | string | number
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <boolean | string | number>> | boolean | string | number
        fullName: <boolean | string | number>> | boolean | string | number
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
    fullName: Excel.RequestContext
  - uid: 'excel!Excel.TableColumnCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:class'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.TableColumnCollection#items~0:complex'
    name: 'Excel.TableColumn[]'
    fullName: 'Excel.TableColumn[]'
    spec.typeScript:
      - uid: 'excel!Excel.TableColumn:class'
        name: Excel.TableColumn
        fullName: Excel.TableColumn
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableColumnCollection:class'
    name: TableColumnCollection
    fullName: Excel.TableColumnCollection