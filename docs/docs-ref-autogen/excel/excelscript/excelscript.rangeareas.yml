### YamlMime:TSType
name: ExcelScript.RangeAreas
uid: ExcelScript!ExcelScript.RangeAreas:interface
package: ExcelScript!
fullName: ExcelScript.RangeAreas
summary: '`RangeAreas` представляет коллекцию из одного или нескольких прямоугольных диапазонов на одном листе.'
remarks: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```TypeScript\n/**\n * This script clears all the cells in the current worksheet that are displaying errors.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the used range on the current sheet.\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // Get the RangeAreas object for each cell with a formula error.\n  const errorCells = usedRange.getSpecialCells(ExcelScript.SpecialCellType.formulas, ExcelScript.SpecialCellValueType.errors);\n\n  // If there are any error cells, clear them.\n  if (errorCells) {\n    errorCells.clear();\n  }\n}\n```"
isPreview: false
isDeprecated: false
type: interface
methods:
- name: addConditionalFormat(type)
  uid: ExcelScript!ExcelScript.RangeAreas#addConditionalFormat:member(1)
  package: ExcelScript!
  fullName: addConditionalFormat(type)
  summary: Добавляет новый условный формат в коллекцию с первым или верхним приоритетом.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addConditionalFormat(type: ConditionalFormatType): ConditionalFormat;'
    parameters:
    - id: type
      description: Тип добавляемого условного формата. Дополнительные `ExcelScript.ConditionalFormatType` сведения см. здесь.
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormatType:enum" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />
      description: ''
- name: calculate()
  uid: ExcelScript!ExcelScript.RangeAreas#calculate:member(1)
  package: ExcelScript!
  fullName: calculate()
  summary: Вычисляет все ячейки в `RangeAreas`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(): void;'
    return:
      type: void
      description: ''
- name: clear(applyTo)
  uid: ExcelScript!ExcelScript.RangeAreas#clear:member(1)
  package: ExcelScript!
  fullName: clear(applyTo)
  summary: Очищает значения, формат, заливку, границу и другие свойства в каждой из областей, составляющих этот `RangeAreas` объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(applyTo?: ClearApplyTo): void;'
    parameters:
    - id: applyTo
      description: Необязательный параметр. Определяет тип действия очистки. Дополнительные `ExcelScript.ClearApplyTo` сведения см. здесь. Значение по умолчанию — "Все".
      type: <xref uid="ExcelScript!ExcelScript.ClearApplyTo:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```TypeScript\n/**\n * This script clears all the cells in the current worksheet that are displaying errors.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the used range on the current sheet.\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // Get the RangeAreas object for each cell with a formula error.\n  const errorCells = usedRange.getSpecialCells(ExcelScript.SpecialCellType.formulas, ExcelScript.SpecialCellValueType.errors);\n\n  // If there are any error cells, clear them.\n  if (errorCells) {\n    errorCells.clear();\n  }\n}\n```"
- name: clearAllConditionalFormats()
  uid: ExcelScript!ExcelScript.RangeAreas#clearAllConditionalFormats:member(1)
  package: ExcelScript!
  fullName: clearAllConditionalFormats()
  summary: Полное удаление условного форматирование в указанном диапазоне.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clearAllConditionalFormats(): void;'
    return:
      type: void
      description: ''
- name: convertDataTypeToText()
  uid: ExcelScript!ExcelScript.RangeAreas#convertDataTypeToText:member(1)
  package: ExcelScript!
  fullName: convertDataTypeToText()
  summary: Преобразует все ячейки в типах `RangeAreas` данных в текст.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  uid: ExcelScript!ExcelScript.RangeAreas#copyFrom:member(1)
  package: ExcelScript!
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  summary: Копирует данные ячеек или форматирование из исходного диапазона или `RangeAreas` в текущий `RangeAreas`<!-- -->. Размер назначения `RangeAreas` может отличаться от исходного диапазона или `RangeAreas`<!-- -->. Назначение будет развернуто автоматически, если оно меньше источника.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      copyFrom(
                  sourceRange: Range | RangeAreas | string,
                  copyType?: RangeCopyType,
                  skipBlanks?: boolean,
                  transpose?: boolean
              ): void;
    parameters:
    - id: sourceRange
      description: Исходный диапазон или из `RangeAreas` которого необходимо скопировать. Если источник имеет `RangeAreas` несколько диапазонов, их форму необходимо создать, удалив полные строки или столбцы из прямоугольного диапазона.
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" /> | <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" /> | string
    - id: copyType
      description: Тип данных ячейки или форматирование для копирования. Значение по умолчанию — "Все".
      type: <xref uid="ExcelScript!ExcelScript.RangeCopyType:enum" />
    - id: skipBlanks
      description: 'Значение true, если пропускать пустые ячейки в исходном диапазоне или `RangeAreas`<!-- -->. Значение по умолчанию: false.'
      type: boolean
    - id: transpose
      description: 'Значение true, если для транспонации ячеек в месте назначения `RangeAreas`<!-- -->. Значение по умолчанию: false.'
      type: boolean
    return:
      type: void
      description: ''
- name: getAddress()
  uid: ExcelScript!ExcelScript.RangeAreas#getAddress:member(1)
  package: ExcelScript!
  fullName: getAddress()
  summary: Возвращает ссылку `RangeAreas` в стиле A1. Значение адреса будет содержать имя листа для каждого прямоугольного блока ячеек (например, "Лист1! A1:B4, Sheet1! D1:D4").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAddress(): string;'
    return:
      type: string
      description: ''
- name: getAddressLocal()
  uid: ExcelScript!ExcelScript.RangeAreas#getAddressLocal:member(1)
  package: ExcelScript!
  fullName: getAddressLocal()
  summary: Возвращает ссылку `RangeAreas` в языковом стандарте пользователя.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAddressLocal(): string;'
    return:
      type: string
      description: ''
- name: getAreaCount()
  uid: ExcelScript!ExcelScript.RangeAreas#getAreaCount:member(1)
  package: ExcelScript!
  fullName: getAreaCount()
  summary: Возвращает число прямоугольных диапазонов, составляющих этот `RangeAreas` объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAreaCount(): number;'
    return:
      type: number
      description: ''
- name: getAreas()
  uid: ExcelScript!ExcelScript.RangeAreas#getAreas:member(1)
  package: ExcelScript!
  fullName: getAreas()
  summary: Возвращает коллекцию прямоугольных диапазонов, составляющих этот `RangeAreas` объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAreas(): Range[];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" />[]
      description: ''
- name: getCellCount()
  uid: ExcelScript!ExcelScript.RangeAreas#getCellCount:member(1)
  package: ExcelScript!
  fullName: getCellCount()
  summary: Возвращает количество ячеек в объекте `RangeAreas` , суммирует количество ячеек всех отдельных прямоугольных диапазонов. Возвращает значение -1, если количество ячеек превышает 2^31-1 (2 147 483 647).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCellCount(): number;'
    return:
      type: number
      description: ''
- name: getConditionalFormat(id)
  uid: ExcelScript!ExcelScript.RangeAreas#getConditionalFormat:member(1)
  package: ExcelScript!
  fullName: getConditionalFormat(id)
  summary: Возвращает условное форматирование для указанного идентификатора.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getConditionalFormat(id: string): ConditionalFormat;'
    parameters:
    - id: id
      description: Идентификатор условного формата.
      type: string
    return:
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />
      description: ''
- name: getConditionalFormats()
  uid: ExcelScript!ExcelScript.RangeAreas#getConditionalFormats:member(1)
  package: ExcelScript!
  fullName: getConditionalFormats()
  summary: Возвращает коллекцию условных форматов, пересекаемых с любыми ячейками в этом объекте `RangeAreas` .
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getConditionalFormats(): ConditionalFormat[];'
    return:
      type: <xref uid="ExcelScript!ExcelScript.ConditionalFormat:interface" />[]
      description: ''
- name: getDataValidation()
  uid: ExcelScript!ExcelScript.RangeAreas#getDataValidation:member(1)
  package: ExcelScript!
  fullName: getDataValidation()
  summary: Возвращает объект проверки данных для всех диапазонов в `RangeAreas`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDataValidation(): DataValidation;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.DataValidation:interface" />
      description: ''
- name: getEntireColumn()
  uid: ExcelScript!ExcelScript.RangeAreas#getEntireColumn:member(1)
  package: ExcelScript!
  fullName: getEntireColumn()
  summary: '`RangeAreas` `RangeAreas` Возвращает объект, представляющий все столбцы объекта (например, `RangeAreas` если текущий представляет ячейки "B4:E11, H2", `RangeAreas` он возвращает столбцы "B:E, H:H").'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireColumn(): RangeAreas;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getEntireRow()
  uid: ExcelScript!ExcelScript.RangeAreas#getEntireRow:member(1)
  package: ExcelScript!
  fullName: getEntireRow()
  summary: '`RangeAreas` `RangeAreas` Возвращает объект, представляющий все строки объекта (например, `RangeAreas` если текущий представляет ячейки "B4:E11", `RangeAreas` он возвращает строку "4:11").'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireRow(): RangeAreas;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getFormat()
  uid: ExcelScript!ExcelScript.RangeAreas#getFormat:member(1)
  package: ExcelScript!
  fullName: getFormat()
  summary: Возвращает объект, `RangeFormat` инкапсулирует шрифт, заливку, границы, выравнивание и другие свойства для всех диапазонов в объекте `RangeAreas` .
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getFormat(): RangeFormat;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeFormat:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```TypeScript\n/**\n * This script finds and highlights all the cells in the current worksheet that contain a formula.\n */\nfunction main(workbook: ExcelScript.Workbook) {\n  // Get the used range on the current sheet.\n  const currentSheet = workbook.getActiveWorksheet();\n  const usedRange = currentSheet.getUsedRange();\n\n  // Get the RangeAreas object for each cell with a formula.\n  const formulaCells = usedRange.getSpecialCells(ExcelScript.SpecialCellType.formulas);\n\n  // Add a light blue background to the cells containing formulas.\n  formulaCells.getFormat().getFill().setColor(\"#ADD8E6\");\n}\n```"
- name: getIntersection(anotherRange)
  uid: ExcelScript!ExcelScript.RangeAreas#getIntersection:member(1)
  package: ExcelScript!
  fullName: getIntersection(anotherRange)
  summary: Возвращает объект, `RangeAreas` представляющий пересечение заданных диапазонов или `RangeAreas`<!-- -->. Если пересечение не найдено, этот метод возвращает `undefined`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersection(anotherRange: Range | RangeAreas | string): RangeAreas;'
    parameters:
    - id: anotherRange
      description: Диапазон, объект `RangeAreas` или адрес, которые будут использоваться для определения пересечения.
      type: <xref uid="ExcelScript!ExcelScript.Range:interface" /> | <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" /> | string
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getIsEntireColumn()
  uid: ExcelScript!ExcelScript.RangeAreas#getIsEntireColumn:member(1)
  package: ExcelScript!
  fullName: getIsEntireColumn()
  summary: Указывает, представляют ли все диапазоны `RangeAreas` этого объекта целые столбцы (например, "A:C, Q:Z").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIsEntireColumn(): boolean;'
    return:
      type: boolean
      description: ''
- name: getIsEntireRow()
  uid: ExcelScript!ExcelScript.RangeAreas#getIsEntireRow:member(1)
  package: ExcelScript!
  fullName: getIsEntireRow()
  summary: Указывает, представляют ли `RangeAreas` все диапазоны этого объекта целые строки (например, "1:3, 5:7").
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIsEntireRow(): boolean;'
    return:
      type: boolean
      description: ''
- name: getOffsetRangeAreas(rowOffset, columnOffset)
  uid: ExcelScript!ExcelScript.RangeAreas#getOffsetRangeAreas:member(1)
  package: ExcelScript!
  fullName: getOffsetRangeAreas(rowOffset, columnOffset)
  summary: Возвращает объект, `RangeAreas` сдвинуемый заданным смещением строки и столбца. Измерение возвращаемого объекта `RangeAreas` будет соответствовать исходному объекту. Если результат принудительно `RangeAreas` выходит за пределы сетки листа, возникает ошибка.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getOffsetRangeAreas(
                  rowOffset: number,
                  columnOffset: number
              ): RangeAreas;
    parameters:
    - id: rowOffset
      description: Количество строк (положительное, отрицательное или 0), `RangeAreas` на которое должно быть смещение. Положительные значения соответствуют смещению вниз, а отрицательные — вверх.
      type: number
    - id: columnOffset
      description: Количество столбцов (положительных, отрицательных или 0), `RangeAreas` на которые должно быть смещено значение. Положительные значения соответствуют смещению вправо, а отрицательные — влево.
      type: number
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getPredefinedCellStyle()
  uid: ExcelScript!ExcelScript.RangeAreas#getPredefinedCellStyle:member(1)
  package: ExcelScript!
  fullName: getPredefinedCellStyle()
  summary: Представляет стиль для всех диапазонов в этом объекте `RangeAreas` . Если стили ячеек не согласованы, `null` будут возвращены значения. Для пользовательских стилей будет возвращено имя стиля. Для встроенных стилей возвращается строка `BuiltInStyle` , представляющая значение в перечислении.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPredefinedCellStyle(): string;'
    return:
      type: string
      description: ''
- name: getSpecialCells(cellType, cellValueType)
  uid: ExcelScript!ExcelScript.RangeAreas#getSpecialCells:member(1)
  package: ExcelScript!
  fullName: getSpecialCells(cellType, cellValueType)
  summary: Возвращает объект, `RangeAreas` представляющий все ячейки, соответствующие указанному типу и значению. Если специальные ячейки, соответствующие критериям, не найдены, этот метод возвращает `undefined`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCells(
                  cellType: SpecialCellType,
                  cellValueType?: SpecialCellValueType
              ): RangeAreas;
    parameters:
    - id: cellType
      description: Тип включаемые ячейки.
      type: <xref uid="ExcelScript!ExcelScript.SpecialCellType:enum" />
    - id: cellValueType
      description: Если `cellType` имеет значение или `constants``formulas`<!-- -->, этот аргумент используется для определения типов ячеек, которые необходимо включить в результат. Эти значения можно объединить, чтобы вернуть несколько типов. По умолчанию выбираются все константы или формулы независимо от типа.
      type: <xref uid="ExcelScript!ExcelScript.SpecialCellValueType:enum" />
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getTables(fullyContained)
  uid: ExcelScript!ExcelScript.RangeAreas#getTables:member(1)
  package: ExcelScript!
  fullName: getTables(fullyContained)
  summary: Возвращает коллекцию таблиц с заданной областью, перекрывающихся с любым диапазоном в этом объекте `RangeAreas` .
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTables(fullyContained?: boolean): Table[];'
    parameters:
    - id: fullyContained
      description: 'Если `true`<!-- -->, возвращает только таблицы, которые полностью содержатся в пределах диапазона. Значение по умолчанию: `false`<!-- -->.'
      type: boolean
    return:
      type: <xref uid="ExcelScript!ExcelScript.Table:interface" />[]
      description: ''
- name: getUsedRangeAreas(valuesOnly)
  uid: ExcelScript!ExcelScript.RangeAreas#getUsedRangeAreas:member(1)
  package: ExcelScript!
  fullName: getUsedRangeAreas(valuesOnly)
  summary: Возвращает используемое, `RangeAreas` которое состоит из всех используемых областей отдельных прямоугольных диапазонов в объекте `RangeAreas` . Если в ячейках нет использованных ячеек `RangeAreas`<!-- -->, затем этот метод возвращает `undefined`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeAreas(valuesOnly?: boolean): RangeAreas;'
    parameters:
    - id: valuesOnly
      description: Следует ли рассматривать только ячейки со значениями в качестве используемых ячеек.
      type: boolean
    return:
      type: <xref uid="ExcelScript!ExcelScript.RangeAreas:interface" />
      description: ''
- name: getWorksheet()
  uid: ExcelScript!ExcelScript.RangeAreas#getWorksheet:member(1)
  package: ExcelScript!
  fullName: getWorksheet()
  summary: Возвращает лист для текущего `RangeAreas`<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getWorksheet(): Worksheet;'
    return:
      type: <xref uid="ExcelScript!ExcelScript.Worksheet:interface" />
      description: ''
- name: setDirty()
  uid: ExcelScript!ExcelScript.RangeAreas#setDirty:member(1)
  package: ExcelScript!
  fullName: setDirty()
  summary: Задает пересчет `RangeAreas` при следующем пересчете.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDirty(): void;'
    return:
      type: void
      description: ''
- name: setPredefinedCellStyle(predefinedCellStyle)
  uid: ExcelScript!ExcelScript.RangeAreas#setPredefinedCellStyle:member(1)
  package: ExcelScript!
  fullName: setPredefinedCellStyle(predefinedCellStyle)
  summary: Представляет стиль для всех диапазонов в этом объекте `RangeAreas` . Если стили ячеек не согласованы, `null` будут возвращены значения. Для пользовательских стилей будет возвращено имя стиля. Для встроенных стилей возвращается строка `BuiltInStyle` , представляющая значение в перечислении.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setPredefinedCellStyle(predefinedCellStyle: string): void;'
    parameters:
    - id: predefinedCellStyle
      description: ''
      type: string
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: deeed74d9af561f16d5d338f6f886584949ef602
  ms.sourcegitcommit: 550121614d5022da564dc035c9550a7aca2c31c5
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 05/13/2022
  ms.locfileid: "65394011"
