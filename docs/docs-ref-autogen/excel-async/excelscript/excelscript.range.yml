### YamlMime:TSType
name: Excel.Range
uid: excel!Excel.Range:interface
package: excel!
fullName: Excel.Range
summary: Range представляет набор из одной или нескольких смежных ячеек, таких как ячейка, строка, столбец, блок ячеек и т. д. Дополнительные сведения о том, как диапазоны используются в API, считываются [Работа с диапазонами с использованием API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges) и [Работа с диапазонами с использованием API JavaScript для Excel (дополнительно)](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-ranges-advanced)<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: address
  uid: excel!Excel.Range#address:member
  package: excel!
  fullName: address
  summary: 'Указывает ссылку на диапазон в стиле a1. Значение Address будет содержать ссылку на лист (например, "Лист1! A1: B4).'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly address: string;'
    return:
      type: string
- name: addressLocal
  uid: excel!Excel.Range#addressLocal:member
  package: excel!
  fullName: addressLocal
  summary: Указывает ссылку на диапазон для указанного диапазона на языке пользователя.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type: string
- name: cellCount
  uid: excel!Excel.Range#cellCount:member
  package: excel!
  fullName: cellCount
  summary: Задает количество ячеек в диапазоне. Этот API возвращает значение -1, если количество ячеек превышает 2^31-1 (2,147,483,647).
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type: number
- name: columnCount
  uid: excel!Excel.Range#columnCount:member
  package: excel!
  fullName: columnCount
  summary: Задает общее количество столбцов в диапазоне.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type: number
- name: columnHidden
  uid: excel!Excel.Range#columnHidden:member
  package: excel!
  fullName: columnHidden
  summary: Указывает, скрыты ли все столбцы текущего диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'columnHidden: boolean;'
    return:
      type: boolean
- name: columnIndex
  uid: excel!Excel.Range#columnIndex:member
  package: excel!
  fullName: columnIndex
  summary: Задает номер столбца первой ячейки в диапазоне. Используется нулевой индекс.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly columnIndex: number;'
    return:
      type: number
- name: conditionalFormats
  uid: excel!Excel.Range#conditionalFormats:member
  package: excel!
  fullName: conditionalFormats
  summary: Коллекция объектов Кондитионалформатс, пересекающих диапазон.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly conditionalFormats: ConditionalFormatCollection;'
    return:
      type: <xref uid="excel!Excel.ConditionalFormatCollection:interface" />
- name: dataValidation
  uid: excel!Excel.Range#dataValidation:member
  package: excel!
  fullName: dataValidation
  summary: Возвращает объект проверки данных.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataValidation: DataValidation;'
    return:
      type: <xref uid="excel!Excel.DataValidation:interface" />
- name: format
  uid: excel!Excel.Range#format:member
  package: excel!
  fullName: format
  summary: Возвращает объект формата, в который включены шрифт, заливка, границы, выравнивание и другие свойства диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: RangeFormat;'
    return:
      type: <xref uid="excel!Excel.RangeFormat:interface" />
- name: formulas
  uid: excel!Excel.Range#formulas:member
  package: excel!
  fullName: formulas
  summary: Представляет формулу в формате A1.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulas: any[][];'
    return:
      type: any[][]
- name: formulasLocal
  uid: excel!Excel.Range#formulasLocal:member
  package: excel!
  fullName: formulasLocal
  summary: Представляет формулу в формате A1 на языке пользователя и в соответствии с его языковым стандартом. Например, английская формула "=SUM(A1, 1.5)" превратится в "=СУММ(A1;1,5)" на русском языке.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulasLocal: any[][];'
    return:
      type: any[][]
- name: formulasR1C1
  uid: excel!Excel.Range#formulasR1C1:member
  package: excel!
  fullName: formulasR1C1
  summary: Представляет формулу в формате R1C1.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'formulasR1C1: any[][];'
    return:
      type: any[][]
- name: height
  uid: excel!Excel.Range#height:member
  package: excel!
  fullName: height
  summary: Возвращает расстояние в пунктах (для масштаба 100 %) от верхнего до нижнего края диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly height: number;'
    return:
      type: number
- name: hidden
  uid: excel!Excel.Range#hidden:member
  package: excel!
  fullName: hidden
  summary: Указывает, скрыты ли все ячейки текущего диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly hidden: boolean;'
    return:
      type: boolean
- name: hyperlink
  uid: excel!Excel.Range#hyperlink:member
  package: excel!
  fullName: hyperlink
  summary: Представляет гиперссылку для текущего диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'hyperlink: RangeHyperlink;'
    return:
      type: <xref uid="excel!Excel.RangeHyperlink:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Orders\");\n\n    let productsRange = sheet.getRange(\"A3:A5\");\n    productsRange.load(\"values\");\n\n    await context.sync();\n\n    // Create a hyperlink to a URL \n    // for each product name in the first table.\n    for (let i = 0; i < productsRange.values.length; i++) {\n        let cellRange = productsRange.getCell(i, 0);\n        let cellText = productsRange.values[i][0];\n\n        let hyperlink = {\n            textToDisplay: cellText,\n            screenTip: \"Search Bing for '\" + cellText + \"'\",\n            address: \"https://www.bing.com?q=\" + cellText\n        }\n        cellRange.hyperlink = hyperlink;\n    }\n\n    await context.sync();\n}\n```"
- name: isEntireColumn
  uid: excel!Excel.Range#isEntireColumn:member
  package: excel!
  fullName: isEntireColumn
  summary: Указывает, является ли текущий диапазон целым столбцом.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type: boolean
- name: isEntireRow
  uid: excel!Excel.Range#isEntireRow:member
  package: excel!
  fullName: isEntireRow
  summary: Указывает, является ли текущий диапазон целой строкой.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type: boolean
- name: left
  uid: excel!Excel.Range#left:member
  package: excel!
  fullName: left
  summary: Возвращает расстояние в пунктах (для масштаба 100 %) от левого края листа до левого края диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly left: number;'
    return:
      type: number
- name: linkedDataTypeState
  uid: excel!Excel.Range#linkedDataTypeState:member
  package: excel!
  fullName: linkedDataTypeState
  summary: Представляет состояние типа данных каждой ячейки.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly linkedDataTypeState: LinkedDataTypeState[][];'
    return:
      type: <xref uid="excel!Excel.LinkedDataTypeState:enum" />[][]
- name: numberFormat
  uid: excel!Excel.Range#numberFormat:member
  package: excel!
  fullName: numberFormat
  summary: Представляет код числового формата Excel для заданного диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormat: any[][];'
    return:
      type: any[][]
- name: numberFormatLocal
  uid: excel!Excel.Range#numberFormatLocal:member
  package: excel!
  fullName: numberFormatLocal
  summary: Представляет код числового формата Excel для заданного диапазона в соответствии с языковыми параметрами пользователя. При извлечении или задании свойства Excel не выполняет приведение форматирования `numberFormatLocal` . Любой возвращенный текст использует локально отформатированные строки на основе языка, указанного в параметрах системы.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'numberFormatLocal: any[][];'
    return:
      type: any[][]
- name: rowCount
  uid: excel!Excel.Range#rowCount:member
  package: excel!
  fullName: rowCount
  summary: Возвращает общее количество строк в диапазоне.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type: number
- name: rowHidden
  uid: excel!Excel.Range#rowHidden:member
  package: excel!
  fullName: rowHidden
  summary: Указывает, скрыты ли все строки текущего диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rowHidden: boolean;'
    return:
      type: boolean
- name: rowIndex
  uid: excel!Excel.Range#rowIndex:member
  package: excel!
  fullName: rowIndex
  summary: Возвращает номер строки первой ячейки диапазона. Используется нулевой индекс.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type: number
- name: sort
  uid: excel!Excel.Range#sort:member
  package: excel!
  fullName: sort
  summary: Представляет порядок сортировки текущего диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly sort: RangeSort;'
    return:
      type: <xref uid="excel!Excel.RangeSort:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    let range = sheet.getRange(\"A1:E5\");\n\n    // Find the column header that provides the sort criteria.\n    let header = range.find(criteria, {});\n    header.load(\"columnIndex\");\n    await context.sync();\n\n    range.sort.apply(\n        [\n            {\n                key: header.columnIndex,\n                sortOn: Excel.SortOn.value\n            }\n        ],\n        false /*matchCase*/,\n        true /*hasHeaders*/,\n        Excel.SortOrientation.rows\n    );\n    await context.sync();\n}\n```"
- name: style
  uid: excel!Excel.Range#style:member
  package: excel!
  fullName: style
  summary: Представляет стиль текущего диапазона. Если стили ячеек противоречивы, возвращается значение null. Для пользовательских стилей будет возвращено имя стиля. Для встроенных стилей возвращается строка, представляющая значение в перечислении Буилтинстиле.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n}\n```"
- name: text
  uid: excel!Excel.Range#text:member
  package: excel!
  fullName: text
  summary: Текстовые значения указанного диапазона. Текстовое значение не зависит от ширины ячейки. \#Подстановка знаков, которая происходит в пользовательском интерфейсе Excel, не влияет на текстовое значение, возвращенное API.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string[][];'
    return:
      type: string[][]
- name: top
  uid: excel!Excel.Range#top:member
  package: excel!
  fullName: top
  summary: Возвращает расстояние в пунктах для масштаба 100 % от верхнего края листа до верхнего края диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly top: number;'
    return:
      type: number
- name: values
  uid: excel!Excel.Range#values:member
  package: excel!
  fullName: values
  summary: Представляет необработанные значения указанного диапазона. Могут возвращаться строковые и числовые данные, а также логические значения. Ячейки, содержащие ошибку, вернут строку ошибки.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'values: any[][];'
    return:
      type: any[][]
- name: valueTypes
  uid: excel!Excel.Range#valueTypes:member
  package: excel!
  fullName: valueTypes
  summary: Указывает тип данных в каждой ячейке.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly valueTypes: RangeValueType[][];'
    return:
      type: <xref uid="excel!Excel.RangeValueType:enum" />[][]
- name: width
  uid: excel!Excel.Range#width:member
  package: excel!
  fullName: width
  summary: Возвращает расстояние в пунктах (для масштаба 100 %) от левого до правого края диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly width: number;'
    return:
      type: number
- name: worksheet
  uid: excel!Excel.Range#worksheet:member
  package: excel!
  fullName: worksheet
  summary: Лист, содержащий текущий диапазон.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:interface" />
methods:
- name: autoFill(destinationRange, autoFillType)
  uid: excel!Excel.Range#autoFill:member(1)
  package: excel!
  fullName: autoFill(destinationRange, autoFillType)
  summary: >-
    Заполняет диапазон от текущего диапазона до конечного диапазона, используя указанную логику автозаполнения. Конечный диапазон может иметь значение null или расширять источник как по горизонтали, так и по вертикали. Несмежные диапазоны не поддерживаются.


    Для получения дополнительных сведений прочитайте об использовании автозаполнения [и мгновенного заполнения](https://support.office.com/article/video-use-autofill-and-flash-fill-2e79a709-c814-4b27-8bc2-c4dc84d49464)<!-- -->.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      autoFill(
                  destinationRange?: Range | string,
                  autoFillType?:
                      | AutoFillType
                      | "FillDefault"
                      | "FillCopy"
                      | "FillSeries"
                      | "FillFormats"
                      | "FillValues"
                      | "FillDays"
                      | "FillWeekdays"
                      | "FillMonths"
                      | "FillYears"
                      | "LinearTrend"
                      | "GrowthTrend"
                      | "FlashFill"
              ): void;
    parameters:
    - id: destinationRange
      description: Целевой диапазон для автозаполнения. Если конечный диапазон равен null, данные заполняются на основе окружающих ячеек (поведение при двойном щелчке маркера заполнения диапазона пользовательского интерфейса).
      type: <xref uid="excel!Excel.Range:interface" /> | string
    - id: autoFillType
      description: Тип автозаполнения. Задает способ заполнения конечного диапазона на основе содержимого текущего диапазона. Значение по умолчанию — "Филлдефаулт".
      type: "| <xref uid=\"excel!Excel.AutoFillType:enum\" />\n                | \"FillDefault\"\n                | \"FillCopy\"\n                | \"FillSeries\"\n                | \"FillFormats\"\n                | \"FillValues\"\n                | \"FillDays\"\n                | \"FillWeekdays\"\n                | \"FillMonths\"\n                | \"FillYears\"\n                | \"LinearTrend\"\n                | \"GrowthTrend\"\n                | \"FlashFill\"\n        "
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n  let sheet = context.workbook.worksheets.getActiveWorksheet();\n  let sumCell = sheet.getRange(\"P4\");\n  \n  // Copy everything. The formulas will be contextually updated based on their new locations.\n  sumCell.autoFill(\"P4:P7\", Excel.AutoFillType.fillCopy);\n  sumCell.format.autofitColumns();\n  await context.sync();\n}\n```"
- name: calculate()
  uid: excel!Excel.Range#calculate:member(1)
  package: excel!
  fullName: calculate()
  summary: Вычисляет диапазон ячеек на листе.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(): void;'
    return:
      type: void
      description: ''
- name: clear(applyTo)
  uid: excel!Excel.Range#clear:member(1)
  package: excel!
  fullName: clear(applyTo)
  summary: Очищает значения, формат, заливку, границу диапазона и т. д.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      clear(
                  applyTo?:
                      | ClearApplyTo
                      | "All"
                      | "Formats"
                      | "Contents"
                      | "Hyperlinks"
                      | "RemoveHyperlinks"
              ): void;
    parameters:
    - id: applyTo
      description: Необязательный параметр. Определяет тип действия очистки. Дополнительные сведения см. в статье Excel. Клеарапплито.
      type: "| <xref uid=\"excel!Excel.ClearApplyTo:enum\" />\n                | \"All\"\n                | \"Formats\"\n                | \"Contents\"\n                | \"Hyperlinks\"\n                | \"RemoveHyperlinks\"\n        "
    return:
      type: void
      description: ''
- name: convertDataTypeToText()
  uid: excel!Excel.Range#convertDataTypeToText:member(1)
  package: excel!
  fullName: convertDataTypeToText()
  summary: Преобразует диапазон ячеек с типами данных в текст.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type: void
      description: ''
- name: convertToLinkedDataType(serviceID, languageCulture)
  uid: excel!Excel.Range#convertToLinkedDataType:member(1)
  package: excel!
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  summary: Преобразует ячейки диапазона в связанный тип данных на листе.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      convertToLinkedDataType(
                  serviceID: number,
                  languageCulture: string
              ): void;
    parameters:
    - id: serviceID
      description: Идентификатор службы, который будет использоваться для запроса данных.
      type: number
    - id: languageCulture
      description: Язык и региональные параметры для запроса службы.
      type: string
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  uid: excel!Excel.Range#copyFrom:member(1)
  package: excel!
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  summary: Копирует данные ячейки или форматирование из исходного диапазона или объекта RangeAreas в текущий диапазон. Конечный диапазон может отличаться от размера исходного диапазона или RangeAreas. Назначение будет автоматически развернуто, если оно меньше исходного.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      copyFrom(
                  sourceRange: Range | RangeAreas | string,
                  copyType?:
                      | RangeCopyType
                      | "All"
                      | "Formulas"
                      | "Values"
                      | "Formats",
                  skipBlanks?: boolean,
                  transpose?: boolean
              ): void;
    parameters:
    - id: sourceRange
      description: Исходный диапазон или RangeAreas, из которого производится копирование. Если исходный RangeAreas имеет несколько диапазонов, их форма должна быть создана путем удаления полных строк или столбцов из прямоугольного диапазона.
      type: <xref uid="excel!Excel.Range:interface" /> | <xref uid="excel!Excel.RangeAreas:interface" /> | string
    - id: copyType
      description: Тип данных или форматирования ячеек, которые необходимо скопировать. Значение по умолчанию — "ALL".
      type: >-
        | <xref uid="excel!Excel.RangeCopyType:enum" />
                        | "All"
                        | "Formulas"
                        | "Values"
                        | "Formats"
    - id: skipBlanks
      description: 'Значение true, если необходимо пропускать пустые ячейки в исходном диапазоне. Значение по умолчанию: false.'
      type: boolean
    - id: transpose
      description: 'Значение true, если требуется переставить ячейки в целевом диапазоне. Значение по умолчанию: false.'
      type: boolean
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.getRange(\"F2\").values = [[\"Copied Formula\"]];\n    sheet.getRange(\"F2\").format.autofitColumns();\n\n    // copy a range preserving the formulas\n    // note: non-formula values are copied over as is\n    sheet.getRange(\"G2\").copyFrom(\"A1:E1\", Excel.RangeCopyType.formulas);\n    await context.sync();\n}\n```"
- name: delete(shift)
  uid: excel!Excel.Range#delete:member(1)
  package: excel!
  fullName: delete(shift)
  summary: Удаляет ячейки, связанные с диапазоном.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(shift: DeleteShiftDirection | "Up" | "Left"): void;'
    parameters:
    - id: shift
      description: Определяет способ сдвига ячеек. Дополнительные сведения см. в статье Excel. Делетешифтдиректион.
      type: <xref uid="excel!Excel.DeleteShiftDirection:enum" /> | "Up" | "Left"
    return:
      type: void
      description: ''
- name: find(text, criteria)
  uid: excel!Excel.Range#find:member(1)
  package: excel!
  fullName: find(text, criteria)
  summary: Находит определенную строку на основе указанных условий. Если текущий диапазон больше, чем одна ячейка, то поиск будет ограничен этим диапазоном, в ином случае поиск будет охватывать весь лист, начиная с этой ячейки.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'find(text: string, criteria: SearchCriteria): Range;'
    parameters:
    - id: text
      description: Строка для поиска.
      type: string
    - id: criteria
      description: Дополнительные критерии поиска, в том числе направление поиска и то, должны ли поисковые данные совпадать с ячейкой целиком или с учетом регистра.
      type: <xref uid="excel!Excel.SearchCriteria:interface" />
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: findOrNullObject(text, criteria)
  uid: excel!Excel.Range#findOrNullObject:member(1)
  package: excel!
  fullName: findOrNullObject(text, criteria)
  summary: Находит определенную строку на основе указанных условий. Если текущий диапазон больше, чем одна ячейка, то поиск будет ограничен этим диапазоном, в ином случае поиск будет охватывать весь лист, начиная с этой ячейки. Если совпадений нет, эта функция возвращает пустой объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'findOrNullObject(text: string, criteria: SearchCriteria): Range;'
    parameters:
    - id: text
      description: Строка для поиска.
      type: string
    - id: criteria
      description: Дополнительные критерии поиска, в том числе направление поиска и то, должны ли поисковые данные совпадать с ячейкой целиком или с учетом регистра.
      type: <xref uid="excel!Excel.SearchCriteria:interface" />
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let table = sheet.tables.getItem(\"ExpensesTable\");\n    let searchRange = table.getRange();\n    let foundRange = searchRange.findOrNullObject($(\"#searchText\").text(), {\n        completeMatch: isCompleteMatchToggle,\n        matchCase: isMatchCaseToggle,\n        searchDirection: searchDirectionToggle\n    });\n    \n    foundRange.load(\"address\");\n    await context.sync();\n\n    if (foundRange.isNullObject) {\n        console.log(\"Text not found\");\n    } else {\n        console.log(foundRange.address);\n    }\n}\n```"
- name: flashFill()
  uid: excel!Excel.Range#flashFill:member(1)
  package: excel!
  fullName: flashFill()
  summary: Выполняет мгновенное заполнение текущего диапазона. Функция мгновенного заполнения автоматически подставляет данные, когда обнаруживает закономерность, поэтому диапазон должен состоять из одного столбца со смежными данными, чтобы выявить закономерность.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'flashFill(): void;'
    return:
      type: void
      description: ''
- name: getAbsoluteResizedRange(numRows, numColumns)
  uid: excel!Excel.Range#getAbsoluteResizedRange:member(1)
  package: excel!
  fullName: getAbsoluteResizedRange(numRows, numColumns)
  summary: Получает объект Range с той же верхней левой ячейкой, что и текущий объект Range, но с указанным количеством строк и столбцов.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAbsoluteResizedRange(numRows: number, numColumns: number): Range;'
    parameters:
    - id: numRows
      description: Число строк нового размера диапазона.
      type: number
    - id: numColumns
      description: Число столбцов нового размера диапазона.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getBoundingRect(anotherRange)
  uid: excel!Excel.Range#getBoundingRect:member(1)
  package: excel!
  fullName: getBoundingRect(anotherRange)
  summary: Возвращает наименьший объект диапазона, включающий в себя заданные диапазоны. Например, GetBoundingRect для "B2:C5" и "D10:E15" возвращает значение "B2:E15".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getBoundingRect(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: Объект диапазона либо адрес или имя диапазона.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getCell(row, column)
  uid: excel!Excel.Range#getCell:member(1)
  package: excel!
  fullName: getCell(row, column)
  summary: Получает объект диапазона, содержащий одну ячейку, по номеру строки и столбца. Ячейка может находиться вне границ родительского диапазона, пока она остается в сетке листа. Возвращаемая ячейка располагается относительно верхней левой ячейки диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCell(row: number, column: number): Range;'
    parameters:
    - id: row
      description: Номер строки ячейки, которую требуется извлечь. Используется нулевой индекс.
      type: number
    - id: column
      description: Номер столбца ячейки, которую требуется извлечь. Используется нулевой индекс.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getColumn(column)
  uid: excel!Excel.Range#getColumn:member(1)
  package: excel!
  fullName: getColumn(column)
  summary: Возвращает столбец в диапазоне.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumn(column: number): Range;'
    parameters:
    - id: column
      description: Номер столбца диапазона, который требуется извлечь. Используется нулевой индекс.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getColumnsAfter(count)
  uid: excel!Excel.Range#getColumnsAfter:member(1)
  package: excel!
  fullName: getColumnsAfter(count)
  summary: Возвращает определенное количество столбцов справа от текущего объекта Range.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnsAfter(count?: number): Range;'
    parameters:
    - id: count
      description: Необязательный. Количество столбцов, включаемых в полученный диапазон. Чтобы создать диапазон за пределами текущего диапазона, используйте положительное число. Вы также можете использовать отрицательное число, чтобы создать диапазон в рамках текущего диапазона. Значение по умолчанию — 1.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getColumnsBefore(count)
  uid: excel!Excel.Range#getColumnsBefore:member(1)
  package: excel!
  fullName: getColumnsBefore(count)
  summary: Возвращает определенное количество столбцов слева от текущего объекта Range.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getColumnsBefore(count?: number): Range;'
    parameters:
    - id: count
      description: Необязательный. Количество столбцов, включаемых в полученный диапазон. Чтобы создать диапазон за пределами текущего диапазона, используйте положительное число. Вы также можете использовать отрицательное число, чтобы создать диапазон в рамках текущего диапазона. Значение по умолчанию — 1.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getEntireColumn()
  uid: excel!Excel.Range#getEntireColumn:member(1)
  package: excel!
  fullName: getEntireColumn()
  summary: 'Получает объект, представляющий весь столбец диапазона (например, если текущий диапазон представляет ячейки "B4: E11", `getEntireColumn` а — диапазон, представляющий столбцы "б:е").'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireColumn(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getEntireRow()
  uid: excel!Excel.Range#getEntireRow:member(1)
  package: excel!
  fullName: getEntireRow()
  summary: 'Получает объект, представляющий всю строку диапазона (например, если текущий диапазон представляет ячейки "B4: E11", `GetEntireRow` а — диапазон, представляющий строки "4:11").'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireRow(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getImage()
  uid: excel!Excel.Range#getImage:member(1)
  package: excel!
  fullName: getImage()
  summary: Отрисовывает диапазон в виде PNG-изображения в кодировке Base64.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getImage(): ClientResult<string>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;string&gt;
      description: ''
- name: getIntersection(anotherRange)
  uid: excel!Excel.Range#getIntersection:member(1)
  package: excel!
  fullName: getIntersection(anotherRange)
  summary: Возвращает объект диапазона, представляющий прямоугольное пересечение заданных диапазонов.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersection(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: Объект диапазона или адрес диапазона, который будет использоваться для определения пересечения диапазонов.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getIntersectionOrNullObject(anotherRange)
  uid: excel!Excel.Range#getIntersectionOrNullObject:member(1)
  package: excel!
  fullName: getIntersectionOrNullObject(anotherRange)
  summary: Возвращает объект диапазона, представляющий прямоугольное пересечение заданных диапазонов. Если пересечение не найдено, возвращает пустой объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersectionOrNullObject(anotherRange: Range | string): Range;'
    parameters:
    - id: anotherRange
      description: Объект диапазона или адрес диапазона, который будет использоваться для определения пересечения диапазонов.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = salesTable.getDataBodyRange();\n\n    // We want the most recent quarter that has data, so\n    // exclude quarters without data and get the last of\n    // the remaining columns.\n    let usedDataRange = dataRange.getUsedRange(true /* valuesOnly */);\n    let currentQuarterRange = usedDataRange.getLastColumn();\n\n    // Asian and European teams have separate contests.\n    let asianSalesRange = sheet.getRange(\"A2:E4\");\n    let europeanSalesRange = sheet.getRange(\"A5:E7\");\n\n    // The data for each chart is the intersection of the\n    // current quarter column and the rows for the continent.\n    let asianContestRange = asianSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n    let europeanContestRange = europeanSalesRange.getIntersectionOrNullObject(currentQuarterRange);\n\n    // Must sync before you can test the output of *OrNullObject\n    // method/property.\n    await context.sync();\n\n    if (asianContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"Asian\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"Asian\",\n            asianContestRange,\n            \"A9\",\n            \"F24\"\n        );\n    }\n\n    if (europeanContestRange.isNullObject) {\n        // See the declaration of this method for how to\n        // test this code path.\n        reportMissingData(\"European\");\n    } else {\n        createContinentChart(\n            sheet,\n            \"European\",\n            europeanContestRange,\n            \"A25\",\n            \"F40\"\n        );\n    }\n\n    await context.sync();\n}\n```"
- name: getLastCell()
  uid: excel!Excel.Range#getLastCell:member(1)
  package: excel!
  fullName: getLastCell()
  summary: Возвращает последнюю ячейку в диапазоне. Например, последняя ячейка диапазона B2:D5 — D5.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastCell(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getLastColumn()
  uid: excel!Excel.Range#getLastColumn:member(1)
  package: excel!
  fullName: getLastColumn()
  summary: Возвращает последний столбец в диапазоне. Например, последний столбец диапазона B2:D5 — D2:D5.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastColumn(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getLastRow()
  uid: excel!Excel.Range#getLastRow:member(1)
  package: excel!
  fullName: getLastRow()
  summary: Возвращает последнюю строку в диапазоне. Например, последняя строка в диапазоне "B2:D5" — "B5:D5".
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLastRow(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getOffsetRange(rowOffset, columnOffset)
  uid: excel!Excel.Range#getOffsetRange:member(1)
  package: excel!
  fullName: getOffsetRange(rowOffset, columnOffset)
  summary: Возвращает объект, представляющий диапазон, который смещен от указанного диапазона. Измерение возвращаемого диапазона будет соответствовать этому диапазону. Если результирующий диапазон выходит за пределы таблицы листа, возникнет ошибка.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOffsetRange(rowOffset: number, columnOffset: number): Range;'
    parameters:
    - id: rowOffset
      description: Количество строк (положительное, отрицательное или нулевое), на которое необходимо сместить диапазон. Положительные значения соответствуют смещению вниз, а отрицательные — вверх.
      type: number
    - id: columnOffset
      description: Количество столбцов (положительное, отрицательное или 0), на который нужно сместить диапазон. Положительные значения соответствуют смещению вправо, а отрицательные — влево.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getPivotTables(fullyContained)
  uid: excel!Excel.Range#getPivotTables:member(1)
  package: excel!
  fullName: getPivotTables(fullyContained)
  summary: Возвращает ограниченную коллекцию сводных таблиц, которые перекрывают диапазон.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPivotTables(fullyContained?: boolean): PivotTableScopedCollection;'
    parameters:
    - id: fullyContained
      description: "Если этот параметр имеет значение true, возвращаются только сводные таблицы, полностью содержащиеся в границах диапазона. Значение по умолчанию \x97 false."
      type: boolean
    return:
      type: <xref uid="excel!Excel.PivotTableScopedCollection:interface" />
      description: ''
- name: getResizedRange(deltaRows, deltaColumns)
  uid: excel!Excel.Range#getResizedRange:member(1)
  package: excel!
  fullName: getResizedRange(deltaRows, deltaColumns)
  summary: Возвращает объект Range, подобный текущему объекту Range, но увеличенный (или уменьшенный) на некоторое количество строк и столбцов от правого нижнего угла.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getResizedRange(deltaRows: number, deltaColumns: number): Range;'
    parameters:
    - id: deltaRows
      description: Количество строк, добавляемых в правый нижний угол, относительно текущего диапазона. Используйте положительное число, чтобы расширить диапазон или отрицательное число, чтобы уменьшить его.
      type: number
    - id: deltaColumns
      description: Количество столбцов, по которым разворачивается нижний правый угол относительно текущего диапазона. Используйте положительное число, чтобы расширить диапазон или отрицательное число, чтобы уменьшить его.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRow(row)
  uid: excel!Excel.Range#getRow:member(1)
  package: excel!
  fullName: getRow(row)
  summary: Возвращает строку из диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRow(row: number): Range;'
    parameters:
    - id: row
      description: Номер строки диапазона, который требуется извлечь. Используется нулевой индекс.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRowsAbove(count)
  uid: excel!Excel.Range#getRowsAbove:member(1)
  package: excel!
  fullName: getRowsAbove(count)
  summary: Возвращает определенное количество строк над текущим объектом Range.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowsAbove(count?: number): Range;'
    parameters:
    - id: count
      description: Необязательный. Количество строк, включаемых в полученный диапазон. Чтобы создать диапазон за пределами текущего диапазона, используйте положительное число. Вы также можете использовать отрицательное число, чтобы создать диапазон в рамках текущего диапазона. Значение по умолчанию — 1.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getRowsBelow(count)
  uid: excel!Excel.Range#getRowsBelow:member(1)
  package: excel!
  fullName: getRowsBelow(count)
  summary: Возвращает определенное количество строк под текущим объектом Range.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRowsBelow(count?: number): Range;'
    parameters:
    - id: count
      description: Необязательный. Количество строк, включаемых в полученный диапазон. Чтобы создать диапазон за пределами текущего диапазона, используйте положительное число. Вы также можете использовать отрицательное число, чтобы создать диапазон в рамках текущего диапазона. Значение по умолчанию — 1.
      type: number
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getSpecialCells(cellType, cellValueType)
  uid: excel!Excel.Range#getSpecialCells:member(1)
  package: excel!
  fullName: getSpecialCells(cellType, cellValueType)
  summary: Получает объект RangeAreas, состоящий из одного или нескольких прямоугольных диапазонов, представляющих все ячейки, которые соответствуют указанному типу и значению. Если специальные ячейки не найдены, будет выдано сообщение об ошибке ItemNotFound.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCells(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: Тип ячеек, которые необходимо включить в список.
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: Если cellType является константами или формулами, этот аргумент используется для определения типов ячеек, которые необходимо включить в результат. Эти значения можно объединять, чтобы возвратить более одного типа. По умолчанию выбираются все константы или формулы независимо от типа.
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSpecialCellsOrNullObject(cellType, cellValueType)
  uid: excel!Excel.Range#getSpecialCellsOrNullObject:member(1)
  package: excel!
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  summary: Получает объект RangeAreas, состоящий из одного или нескольких диапазонов, представляющих все ячейки, которые соответствуют указанному типу и значению. Если специальные ячейки не найдены, возвращается пустой объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getSpecialCellsOrNullObject(
                  cellType:
                      | SpecialCellType
                      | "ConditionalFormats"
                      | "DataValidations"
                      | "Blanks"
                      | "Constants"
                      | "Formulas"
                      | "SameConditionalFormat"
                      | "SameDataValidation"
                      | "Visible",
                  cellValueType?:
                      | SpecialCellValueType
                      | "All"
                      | "Errors"
                      | "ErrorsLogical"
                      | "ErrorsNumbers"
                      | "ErrorsText"
                      | "ErrorsLogicalNumber"
                      | "ErrorsLogicalText"
                      | "ErrorsNumberText"
                      | "Logical"
                      | "LogicalNumbers"
                      | "LogicalText"
                      | "LogicalNumbersText"
                      | "Numbers"
                      | "NumbersText"
                      | "Text"
              ): RangeAreas;
    parameters:
    - id: cellType
      description: Тип ячеек, которые необходимо включить в список.
      type: >-
        | <xref uid="excel!Excel.SpecialCellType:enum" />
                        | "ConditionalFormats"
                        | "DataValidations"
                        | "Blanks"
                        | "Constants"
                        | "Formulas"
                        | "SameConditionalFormat"
                        | "SameDataValidation"
                        | "Visible"
    - id: cellValueType
      description: Если cellType является константами или формулами, этот аргумент используется для определения типов ячеек, которые необходимо включить в результат. Эти значения можно объединять, чтобы возвратить более одного типа. По умолчанию выбираются все константы или формулы независимо от типа.
      type: "| <xref uid=\"excel!Excel.SpecialCellValueType:enum\" />\n                | \"All\"\n                | \"Errors\"\n                | \"ErrorsLogical\"\n                | \"ErrorsNumbers\"\n                | \"ErrorsText\"\n                | \"ErrorsLogicalNumber\"\n                | \"ErrorsLogicalText\"\n                | \"ErrorsNumberText\"\n                | \"Logical\"\n                | \"LogicalNumbers\"\n                | \"LogicalText\"\n                | \"LogicalNumbersText\"\n                | \"Numbers\"\n                | \"NumbersText\"\n                | \"Text\"\n        "
    return:
      type: <xref uid="excel!Excel.RangeAreas:interface" />
      description: ''
- name: getSurroundingRegion()
  uid: excel!Excel.Range#getSurroundingRegion:member(1)
  package: excel!
  fullName: getSurroundingRegion()
  summary: Возвращает объект Range, представляющий область вокруг верхней левой ячейки в этом диапазоне. Это диапазон, ограниченный любым сочетанием пустых строк и столбцов, относящихся к этому диапазону.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSurroundingRegion(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getTables(fullyContained)
  uid: excel!Excel.Range#getTables:member(1)
  package: excel!
  fullName: getTables(fullyContained)
  summary: Получает коллекцию таблиц с заданной областью, перекрывающую диапазон.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTables(fullyContained?: boolean): TableScopedCollection;'
    parameters:
    - id: fullyContained
      description: "Если этот параметр имеет значение true, возвращаются только таблицы, полностью содержащиеся в границах диапазона. Значение по умолчанию \x97 false."
      type: boolean
    return:
      type: <xref uid="excel!Excel.TableScopedCollection:interface" />
      description: ''
- name: getUsedRange(valuesOnly)
  uid: excel!Excel.Range#getUsedRange:member(1)
  package: excel!
  fullName: getUsedRange(valuesOnly)
  summary: Возвращает используемый диапазон заданного объекта диапазона. Если в диапазоне нет используемых ячеек, эта функция выдает ошибку ItemNotFound.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRange(valuesOnly?: boolean): Range;'
    parameters:
    - id: valuesOnly
      description: Учитывает только ячейки со значениями.
      type: boolean
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getUsedRangeOrNullObject(valuesOnly)
  uid: excel!Excel.Range#getUsedRangeOrNullObject:member(1)
  package: excel!
  fullName: getUsedRangeOrNullObject(valuesOnly)
  summary: Возвращает используемый диапазон заданного объекта диапазона. Если в диапазоне нет используемых ячеек, эта функция возвращает пустой объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeOrNullObject(valuesOnly?: boolean): Range;'
    parameters:
    - id: valuesOnly
      description: Учитывает только ячейки со значениями.
      type: boolean
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = salesTable.getDataBodyRange();\n\n    // Pass true so only cells with values count as used\n    let usedDataRange = dataRange.getUsedRangeOrNullObject(\n        true /* valuesOnly */\n    );\n\n    //Must sync before reading value returned from *OrNullObject method/property.\n    await context.sync();\n\n    if (usedDataRange.isNullObject) {\n        console.log(\"Need Data to Make Chart\");\n        console.log(\"To create a meaningful chart, press 'Fill the table' (or add names to the Product column and numbers to some of the other cells). Then press 'Try to create chart' again.\");\n    } else {\n        let chart = sheet.charts.add(\n            Excel.ChartType.columnClustered,\n            dataRange,\n            \"Columns\"\n        );\n        chart.setPosition(\"A15\", \"F30\");\n        chart.title.text = \"Quarterly sales chart\";\n        chart.legend.position = \"Right\";\n        chart.legend.format.fill.setSolidColor(\"white\");\n        chart.dataLabels.format.font.size = 15;\n        chart.dataLabels.format.font.color = \"black\";\n    }\n\n    await context.sync();\n}\n```"
- name: getVisibleView()
  uid: excel!Excel.Range#getVisibleView:member(1)
  package: excel!
  fullName: getVisibleView()
  summary: Представляет видимые строки текущего диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getVisibleView(): RangeView;'
    return:
      type: <xref uid="excel!Excel.RangeView:interface" />
      description: ''
- name: group(groupOption)
  uid: excel!Excel.Range#group:member(1)
  package: excel!
  fullName: group(groupOption)
  summary: Группирует столбцы и строки для структуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'group(groupOption: GroupOption | "ByRows" | "ByColumns"): void;'
    parameters:
    - id: groupOption
      description: Указывает, как диапазон может группироваться по строкам или столбцам. `InvalidArgument`Ошибка возникает, если параметр Group отличается от `isEntireRow` `isEntireColumn` значения свойства Range (то есть, `range.isEntireRow` имеет значение true и `groupOption` равно "биколумнс") или имеет `range.isEntireColumn` значение true и `groupOption` равно "бировс").
      type: <xref uid="excel!Excel.GroupOption:enum" /> | "ByRows" | "ByColumns"
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nExcel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    \n    // Group the larger, main level. Note that the outline controls\n    // will be on row 10, meaning 4-9 will collapse and expand.\n    sheet.getRange(\"4:9\").group(Excel.GroupOption.byRows);\n\n    // Group the smaller, sublevels. Note that the outline controls\n    // will be on rows 6 and 9, meaning 4-5 and 7-8 will collapse and expand.\n    sheet.getRange(\"4:5\").group(Excel.GroupOption.byRows);\n    sheet.getRange(\"7:8\").group(Excel.GroupOption.byRows);\n    await context.sync();\n}\n```"
- name: hideGroupDetails(groupOption)
  uid: excel!Excel.Range#hideGroupDetails:member(1)
  package: excel!
  fullName: hideGroupDetails(groupOption)
  summary: Скрытие сведений о группе строк или столбцов.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      hideGroupDetails(
                  groupOption: GroupOption | "ByRows" | "ByColumns"
              ): void;
    parameters:
    - id: groupOption
      description: Указывает, следует ли скрыть сведения о сгруппированных строках или столбцах группировки.
      type: "<xref uid=\"excel!Excel.GroupOption:enum\" /> | \"ByRows\" | \"ByColumns\"\n        "
    return:
      type: void
      description: ''
- name: insert(shift)
  uid: excel!Excel.Range#insert:member(1)
  package: excel!
  fullName: insert(shift)
  summary: Вставляет ячейку или диапазон ячеек на лист вместо этого диапазона, а также сдвигает другие ячейки, чтобы освободить место. Возвращает новый объект Range в пустом месте.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insert(shift: InsertShiftDirection | "Down" | "Right"): Range;'
    parameters:
    - id: shift
      description: Определяет способ сдвига ячеек. Дополнительные сведения см. в статье Excel. Инсертшифтдиректион.
      type: <xref uid="excel!Excel.InsertShiftDirection:enum" /> | "Down" | "Right"
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Range#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: void
      description: ''
- name: merge(across)
  uid: excel!Excel.Range#merge:member(1)
  package: excel!
  fullName: merge(across)
  summary: Объединяет ячейки диапазона в одну область на листе.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'merge(across?: boolean): void;'
    parameters:
    - id: across
      description: Необязательный параметр. Установите значение true, чтобы объединить ячейки в каждой строке заданного диапазона как отдельные объединенные ячейки. Значение по умолчанию — false.
      type: boolean
    return:
      type: void
      description: ''
- name: moveTo(destinationRange)
  uid: excel!Excel.Range#moveTo:member(1)
  package: excel!
  fullName: moveTo(destinationRange)
  summary: Перемещает значения ячеек, форматирование и формулы из текущего диапазона в конечный диапазон, заменяя старые сведения в этих ячейках. Конечный диапазон будет расширен автоматически, если он меньше текущего диапазона. Все ячейки в диапазоне назначения, расположенные вне области исходного диапазона, не меняются.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'moveTo(destinationRange: Range | string): void;'
    parameters:
    - id: destinationRange
      description: Дестинатионранже указывает диапазон, в который будут перемещены сведения из этого диапазона.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: void
      description: ''
- name: removeDuplicates(columns, includesHeader)
  uid: excel!Excel.Range#removeDuplicates:member(1)
  package: excel!
  fullName: removeDuplicates(columns, includesHeader)
  summary: Удаляет повторяющиеся значения из диапазона, заданного столбцами.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      removeDuplicates(
                  columns: number[],
                  includesHeader: boolean
              ): RemoveDuplicatesResult;
    parameters:
    - id: columns
      description: Столбцы в диапазоне, которые могут содержать дубликаты. Необходимо указать по крайней мере один столбец. Используется нулевой индекс.
      type: number[]
    - id: includesHeader
      description: 'Значение true, если входные данные содержат заголовок. Значение по умолчанию: false.'
      type: boolean
    return:
      type: <xref uid="excel!Excel.RemoveDuplicatesResult:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = sheet.getRange(\"B2:D11\");\n\n    let deleteResult = range.removeDuplicates([0],true);    \n    deleteResult.load();    \n    await context.sync();\n\n    console.log(deleteResult.removed + \" entries with duplicate names removed.\");\n    console.log(deleteResult.uniqueRemaining + \" entries with unique names remain in the range.\");\n}\n```"
- name: replaceAll(text, replacement, criteria)
  uid: excel!Excel.Range#replaceAll:member(1)
  package: excel!
  fullName: replaceAll(text, replacement, criteria)
  summary: Находит и заменяет определенную строку на основе условий, указанных в текущем диапазоне.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      replaceAll(
                  text: string,
                  replacement: string,
                  criteria: ReplaceCriteria
              ): ClientResult<number>;
    parameters:
    - id: text
      description: Строка для поиска.
      type: string
    - id: replacement
      description: Строка для замены оригинала на.
      type: string
    - id: criteria
      description: Дополнительные условия замены.
      type: <xref uid="excel!Excel.ReplaceCriteria:interface" />
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: select()
  uid: excel!Excel.Range#select:member(1)
  package: excel!
  fullName: select()
  summary: Выбирает указанный диапазон в пользовательском интерфейсе Excel.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(): void;'
    return:
      type: void
      description: ''
- name: setDirty()
  uid: excel!Excel.Range#setDirty:member(1)
  package: excel!
  fullName: setDirty()
  summary: Устанавливает диапазон, предназначенный для пересчета при выполнении следующего пересчета.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDirty(): void;'
    return:
      type: void
      description: ''
- name: showCard()
  uid: excel!Excel.Range#showCard:member(1)
  package: excel!
  fullName: showCard()
  summary: Отображает карточку для активной ячейки, если она имеет содержимое c форматированным значением.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showCard(): void;'
    return:
      type: void
      description: ''
- name: showGroupDetails(groupOption)
  uid: excel!Excel.Range#showGroupDetails:member(1)
  package: excel!
  fullName: showGroupDetails(groupOption)
  summary: Отображение сведений о группе строк или столбцов.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      showGroupDetails(
                  groupOption: GroupOption | "ByRows" | "ByColumns"
              ): void;
    parameters:
    - id: groupOption
      description: Указывает, следует ли отображать сведения о сгруппированных строках или столбцах в группировке.
      type: "<xref uid=\"excel!Excel.GroupOption:enum\" /> | \"ByRows\" | \"ByColumns\"\n        "
    return:
      type: void
      description: ''
- name: ungroup(groupOption)
  uid: excel!Excel.Range#ungroup:member(1)
  package: excel!
  fullName: ungroup(groupOption)
  summary: Разгруппирование столбцов и строк для структуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'ungroup(groupOption: GroupOption | "ByRows" | "ByColumns"): void;'
    parameters:
    - id: groupOption
      description: Указывает, как диапазон можно разгруппировать по строкам или столбцам.
      type: <xref uid="excel!Excel.GroupOption:enum" /> | "ByRows" | "ByColumns"
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nExcel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getActiveWorksheet();\n    \n    // This removes two levels of groups from the \"A1-R10\" range.\n    // Any groups at the same level on the same dimension will be removed by a single call.\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byRows);\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byRows);\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byColumns);\n    sheet.getRange(\"A1:R10\").ungroup(Excel.GroupOption.byColumns);\n    await context.sync();\n}\n```"
- name: unmerge()
  uid: excel!Excel.Range#unmerge:member(1)
  package: excel!
  fullName: unmerge()
  summary: Разъединяет ячейки диапазона на отдельные ячейки.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'unmerge(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: de868bdab7b9962ebb7c9d967bd06a3d73f5e9fd
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418788"
