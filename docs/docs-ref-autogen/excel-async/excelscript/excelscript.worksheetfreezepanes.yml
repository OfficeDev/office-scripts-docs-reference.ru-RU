### YamlMime:TSType
name: Excel.WorksheetFreezePanes
uid: excel!Excel.WorksheetFreezePanes:interface
package: excel!
fullName: Excel.WorksheetFreezePanes
summary: ''
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: freezeAt(frozenRange)
  uid: excel!Excel.WorksheetFreezePanes#freezeAt:member(1)
  package: excel!
  fullName: freezeAt(frozenRange)
  summary: Задает закрепленные ячейки в представлении активного листа. Указанный диапазон соответствует ячейкам, которые будут заморожены в верхней и левой области.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    parameters:
    - id: frozenRange
      description: Диапазон, представляющий ячейки, которые должны быть заморожены, или значение NULL для удаления всех замороженных областей.
      type: <xref uid="excel!Excel.Range:interface" /> | string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n}\n```"
- name: freezeColumns(count)
  uid: excel!Excel.WorksheetFreezePanes#freezeColumns:member(1)
  package: excel!
  fullName: freezeColumns(count)
  summary: Закрепляет первый столбец (или столбцы) листа на месте.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'freezeColumns(count?: number): void;'
    parameters:
    - id: count
      description: Необязательное количество столбцов для закрепления или ноль для освобождения всех столбцов
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n}\n```"
- name: freezeRows(count)
  uid: excel!Excel.WorksheetFreezePanes#freezeRows:member(1)
  package: excel!
  fullName: freezeRows(count)
  summary: Закрепляет верхнюю строку (или строки) листа на месте.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'freezeRows(count?: number): void;'
    parameters:
    - id: count
      description: Необязательное количество строк для закрепления или ноль для разморозки всех строк
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n}\n```"
- name: getLocation()
  uid: excel!Excel.WorksheetFreezePanes#getLocation:member(1)
  package: excel!
  fullName: getLocation()
  summary: Получает диапазон, описывающий закрепленные ячейки в представлении активного листа. Замороженный диапазон соответствует ячейкам, замороженным в верхней и левой области.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocation(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: ''
- name: getLocationOrNullObject()
  uid: excel!Excel.WorksheetFreezePanes#getLocationOrNullObject:member(1)
  package: excel!
  fullName: getLocationOrNullObject()
  summary: Получает диапазон, описывающий закрепленные ячейки в представлении активного листа. Замороженный диапазон соответствует ячейкам, замороженным в верхней и левой области. Если нет замороженной области, возвращается пустой объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocationOrNullObject(): Range;'
    return:
      type: <xref uid="excel!Excel.Range:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        console.log(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n}\n```"
- name: load(propertyNames)
  uid: excel!Excel.WorksheetFreezePanes#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: void
      description: ''
- name: unfreeze()
  uid: excel!Excel.WorksheetFreezePanes#unfreeze:member(1)
  package: excel!
  fullName: unfreeze()
  summary: Удаляет все закрепленные области в листе.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'unfreeze(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n}\n```"
metadata:
  ms.openlocfilehash: 1d336cf2ff466b64a59f0e70a1392c4a77081c18
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49412610"
