### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableCollection:interface'
    summary: 'Представляет коллекцию всех таблиц, входящих в состав книги или листа, в зависимости от способа доступа.'
    name: Excel.TableCollection
    fullName: Excel.TableCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.TableCollection#add:member(1)'
      - 'excel!Excel.TableCollection#count:member'
      - 'excel!Excel.TableCollection#getCount:member(1)'
      - 'excel!Excel.TableCollection#getItem:member(1)'
      - 'excel!Excel.TableCollection#getItemAt:member(1)'
      - 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.TableCollection#load:member(1)'
  - uid: 'excel!Excel.TableCollection#add:member(1)'
    summary: 'Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.'
    name: 'add(address, hasHeaders)'
    fullName: 'add(address, hasHeaders)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(address: Range | string, hasHeaders: boolean): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: address
          description: 'Объект Range, строковый адрес или имя диапазона, представляющего источник данных. Если адрес не содержит имя листа, используется текущий активный лист.'
          type:
            - 'excel!Excel.TableCollection#add~0:complex'
        - id: hasHeaders
          description: 'Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.'
          type:
            - boolean
  - uid: 'excel!Excel.TableCollection#count:member'
    summary: Возвращает количество таблиц в книге.
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableCollection#getCount:member(1)'
    summary: Получает количество таблиц в коллекции.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableCollection#getItem:member(1)'
    summary: Получает таблицу по имени или идентификатору.
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: key
          description: Имя или ИД получаемой таблицы.
          type:
            - string
  - uid: 'excel!Excel.TableCollection#getItemAt:member(1)'
    summary: Получает таблицу на основании ее позиции в коллекции.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: index
          description: Значение индекса получаемого объекта. Используется нулевой индекс.
          type:
            - number
  - uid: 'excel!Excel.TableCollection#getItemOrNullObject:member(1)'
    summary: 'Получает таблицу по имени или ИД. Если таблица не существует, возвращает пустой объект.'
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Table;'
      return:
        type:
          - 'excel!Excel.Table:interface'
        description: ''
      parameters:
        - id: key
          description: Имя или ИД получаемой таблицы.
          type:
            - string
  - uid: 'excel!Excel.TableCollection#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Table:interface'
    name: Table
    fullName: Excel.Table
  - uid: 'excel!Excel.TableCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.TableCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:interface'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>