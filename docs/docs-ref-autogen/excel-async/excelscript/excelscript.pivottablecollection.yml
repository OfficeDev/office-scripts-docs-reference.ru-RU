### YamlMime:TSType
name: Excel.PivotTableCollection
uid: excel!Excel.PivotTableCollection:interface
package: excel!
fullName: Excel.PivotTableCollection
summary: Представляет коллекцию всех объектов PivotTable, входящих в состав книги или листа.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
- name: add(name, source, destination)
  uid: excel!Excel.PivotTableCollection#add:member(1)
  package: excel!
  fullName: add(name, source, destination)
  summary: Добавьте сводную таблицу на основе указанных исходных данных и вставьте ее в верхнюю левую ячейку конечного диапазона.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      add(
                  name: string,
                  source: Range | string | Table,
                  destination: Range | string
              ): PivotTable;
    parameters:
    - id: name
      description: Имя новой сводной таблицы.
      type: string
    - id: source
      description: Исходные данные для новой сводной таблицы, может быть диапазоном (или строковым адресом, включая имя листа) или таблицей.
      type: <xref uid="excel!Excel.Range:interface" /> | string | <xref uid="excel!Excel.Table:interface" />
    - id: destination
      description: Ячейка в левом верхнем углу диапазона назначения отчета сводной таблицы (диапазон на листе, на котором будет помещен итоговый отчет).
      type: "<xref uid=\"excel!Excel.Range:interface\" /> | string\n        "
    return:
      type: <xref uid="excel!Excel.PivotTable:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let rangeToAnalyze = context.workbook.worksheets.getItem(\"Data\").getRange(\"A1:E21\");\n    let rangeToPlacePivot = context.workbook.worksheets.getItem(\"Pivot\").getRange(\"A2\");\n    context.workbook.worksheets.getItem(\"Pivot\").pivotTables.add(\"Farm Sales\", rangeToAnalyze, rangeToPlacePivot);\n\n    await context.sync();\n}\n```"
- name: getCount()
  uid: excel!Excel.PivotTableCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: Получает количество сводных таблиц в коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): ClientResult<number>;'
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;number&gt;
      description: ''
- name: getItem(name)
  uid: excel!Excel.PivotTableCollection#getItem:member(1)
  package: excel!
  fullName: getItem(name)
  summary: Получает сводную таблицу по имени.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(name: string): PivotTable;'
    parameters:
    - id: name
      description: Имя получаемой сводной таблицы.
      type: string
    return:
      type: <xref uid="excel!Excel.PivotTable:interface" />
      description: ''
- name: getItemOrNullObject(name)
  uid: excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(name)
  summary: Получает сводную таблицу по имени. Если сводная таблица не существует, возвращает пустой объект.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(name: string): PivotTable;'
    parameters:
    - id: name
      description: Имя получаемой сводной таблицы.
      type: string
    return:
      type: <xref uid="excel!Excel.PivotTable:interface" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.PivotTableCollection#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: void
      description: ''
- name: refreshAll()
  uid: excel!Excel.PivotTableCollection#refreshAll:member(1)
  package: excel!
  fullName: refreshAll()
  summary: Обновляет все сводные таблицы в коллекции.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'refreshAll(): void;'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 4097e746efd052c47ad386b3f52711778b10c0ee
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418837"
