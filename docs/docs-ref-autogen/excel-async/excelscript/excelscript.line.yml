### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Line:interface'
    summary: 'Представляет строку в рабочем листе. Чтобы получить соответствующий объект Shape, используйте`Line.shape`<!-- -->.'
    name: Excel.Line
    fullName: Excel.Line
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Line#beginArrowheadLength:member'
      - 'excel!Excel.Line#beginArrowheadStyle:member'
      - 'excel!Excel.Line#beginArrowheadWidth:member'
      - 'excel!Excel.Line#beginConnectedShape:member'
      - 'excel!Excel.Line#beginConnectedSite:member'
      - 'excel!Excel.Line#connectBeginShape:member(1)'
      - 'excel!Excel.Line#connectEndShape:member(1)'
      - 'excel!Excel.Line#connectorType:member'
      - 'excel!Excel.Line#disconnectBeginShape:member(1)'
      - 'excel!Excel.Line#disconnectEndShape:member(1)'
      - 'excel!Excel.Line#endArrowheadLength:member'
      - 'excel!Excel.Line#endArrowheadStyle:member'
      - 'excel!Excel.Line#endArrowheadWidth:member'
      - 'excel!Excel.Line#endConnectedShape:member'
      - 'excel!Excel.Line#endConnectedSite:member'
      - 'excel!Excel.Line#id:member'
      - 'excel!Excel.Line#isBeginConnected:member'
      - 'excel!Excel.Line#isEndConnected:member'
      - 'excel!Excel.Line#load:member(1)'
      - 'excel!Excel.Line#shape:member'
  - uid: 'excel!Excel.Line#beginArrowheadLength:member'
    summary: Представляет длину наконечника в начале указанной линии.
    name: beginArrowheadLength
    fullName: beginArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadLength: ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - 'excel!Excel.Line#beginArrowheadLength~0:complex'
  - uid: 'excel!Excel.Line#beginArrowheadStyle:member'
    summary: Представляет стиль наконечника в начале указанной линии.
    name: beginArrowheadStyle
    fullName: beginArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        beginArrowheadStyle:
                    | ArrowheadStyle
                    | "None"
                    | "Triangle"
                    | "Stealth"
                    | "Diamond"
                    | "Oval"
                    | "Open";
      return:
        type:
          - 'excel!Excel.Line#beginArrowheadStyle~0:complex'
  - uid: 'excel!Excel.Line#beginArrowheadWidth:member'
    summary: Представляет ширину наконечника в начале указанной линии.
    name: beginArrowheadWidth
    fullName: beginArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'beginArrowheadWidth: ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - 'excel!Excel.Line#beginArrowheadWidth~0:complex'
  - uid: 'excel!Excel.Line#beginConnectedShape:member'
    summary: 'Представляет фигуру, к которой привязано начало указанной линии.'
    name: beginConnectedShape
    fullName: beginConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedShape: Shape;'
      return:
        type:
          - 'excel!Excel.Shape:interface'
  - uid: 'excel!Excel.Line#beginConnectedSite:member'
    summary: 'Представляет точку соединения, к которой привязано начало соединительной линии. Возвращает значение null, если начало линии не привязано к фигуре.'
    name: beginConnectedSite
    fullName: beginConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly beginConnectedSite: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Line#connectBeginShape:member(1)'
    summary: Привязывает начало указанного соединителя к указанной фигуре.
    name: 'connectBeginShape(shape, connectionSite)'
    fullName: 'connectBeginShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectBeginShape(shape: Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          }
          ```
      parameters:
        - id: shape
          description: 'Фигура, которую необходимо подключить.'
          type:
            - 'excel!Excel.Shape:interface'
        - id: connectionSite
          description: 'Сайт подключения к фигуре, к которой присоединено начало соединителя. Должно быть целым числом от 0 (включительно) и числом подключений к сайту указанной фигуры (монопольно).'
          type:
            - number
  - uid: 'excel!Excel.Line#connectEndShape:member(1)'
    summary: Привязывает конец указанного соединителя к указанной фигуре.
    name: 'connectEndShape(shape, connectionSite)'
    fullName: 'connectEndShape(shape, connectionSite)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'connectEndShape(shape: Shape, connectionSite: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.connectBeginShape(shapes.getItem("Left"), 2);
              line.connectEndShape(shapes.getItem("Right"), 0);
              await context.sync();
          }
          ```
      parameters:
        - id: shape
          description: 'Фигура, которую необходимо подключить.'
          type:
            - 'excel!Excel.Shape:interface'
        - id: connectionSite
          description: 'Сайт подключения к фигуре, к которой присоединен конец соединителя. Должно быть целым числом от 0 (включительно) и числом подключений к сайту указанной фигуры (монопольно).'
          type:
            - number
  - uid: 'excel!Excel.Line#connectorType:member'
    summary: Представляет тип соединительной линии.
    name: connectorType
    fullName: connectorType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'connectorType: ConnectorType | "Straight" | "Elbow" | "Curve";'
      return:
        type:
          - 'excel!Excel.Line#connectorType~0:complex'
  - uid: 'excel!Excel.Line#disconnectBeginShape:member(1)'
    summary: Отвязывает начало указанного соединителя от фигуры.
    name: disconnectBeginShape()
    fullName: disconnectBeginShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectBeginShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Line#disconnectEndShape:member(1)'
    summary: Отвязывает конец указанного соединителя от фигуры.
    name: disconnectEndShape()
    fullName: disconnectEndShape()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'disconnectEndShape(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.disconnectBeginShape();
              line.disconnectEndShape();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Line#endArrowheadLength:member'
    summary: Представляет длину наконечника в конце указанной линии.
    name: endArrowheadLength
    fullName: endArrowheadLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadLength: ArrowheadLength | "Short" | "Medium" | "Long";'
      return:
        type:
          - 'excel!Excel.Line#endArrowheadLength~0:complex'
  - uid: 'excel!Excel.Line#endArrowheadStyle:member'
    summary: Представляет стиль наконечника в конце указанной линии.
    name: endArrowheadStyle
    fullName: endArrowheadStyle
    langs:
      - typeScript
    type: property
    syntax:
      content: |-
        endArrowheadStyle:
                    | ArrowheadStyle
                    | "None"
                    | "Triangle"
                    | "Stealth"
                    | "Diamond"
                    | "Oval"
                    | "Open";
      return:
        type:
          - 'excel!Excel.Line#endArrowheadStyle~0:complex'
  - uid: 'excel!Excel.Line#endArrowheadWidth:member'
    summary: Представляет ширину наконечника в конце указанной линии.
    name: endArrowheadWidth
    fullName: endArrowheadWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'endArrowheadWidth: ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
      return:
        type:
          - 'excel!Excel.Line#endArrowheadWidth~0:complex'
  - uid: 'excel!Excel.Line#endConnectedShape:member'
    summary: 'Представляет фигуру, к которой привязан конец указанной линии.'
    name: endConnectedShape
    fullName: endConnectedShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedShape: Shape;'
      return:
        type:
          - 'excel!Excel.Shape:interface'
  - uid: 'excel!Excel.Line#endConnectedSite:member'
    summary: 'Представляет точку соединения, к которой привязан конец соединительной линии. Возвращает значение null, если конец линии не привязан к фигуре.'
    name: endConnectedSite
    fullName: endConnectedSite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly endConnectedSite: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Line#id:member'
    summary: Задает идентификатор фигуры.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Line#isBeginConnected:member'
    summary: 'Указывает, подключается ли начало указанной линии к фигуре.'
    name: isBeginConnected
    fullName: isBeginConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isBeginConnected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Line#isEndConnected:member'
    summary: 'Указывает, подключена ли конец указанной линии к фигуре.'
    name: isEndConnected
    fullName: isEndConnected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isEndConnected: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Line#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Line#shape:member'
    summary: 'Возвращает объект Shape, связанный с линией.'
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Shape;'
      return:
        type:
          - 'excel!Excel.Shape:interface'
references:
  - uid: 'excel!Excel.Line#beginArrowheadLength~0:complex'
    name: ArrowheadLength | "Short" | "Medium" | "Long"
    fullName: Excel.ArrowheadLength | "Short" | "Medium" | "Long"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadLength:enum'
        name: ArrowheadLength
        fullName: Excel.ArrowheadLength
      - name: ' | "Short" | "Medium" | "Long"'
        fullName: ' | "Short" | "Medium" | "Long"'
  - uid: 'excel!Excel.Line#beginArrowheadStyle~0:complex'
    name: |-
      | ArrowheadStyle
                  | "None"
                  | "Triangle"
                  | "Stealth"
                  | "Diamond"
                  | "Oval"
                  | "Open"
    fullName: |-
      | Excel.ArrowheadStyle
                  | "None"
                  | "Triangle"
                  | "Stealth"
                  | "Diamond"
                  | "Oval"
                  | "Open"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.ArrowheadStyle:enum'
        name: ArrowheadStyle
        fullName: Excel.ArrowheadStyle
      - name: |2-

                      | "None"
                      | "Triangle"
                      | "Stealth"
                      | "Diamond"
                      | "Oval"
                      | "Open"
        fullName: |2-

                      | "None"
                      | "Triangle"
                      | "Stealth"
                      | "Diamond"
                      | "Oval"
                      | "Open"
  - uid: 'excel!Excel.Line#beginArrowheadWidth~0:complex'
    name: ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    fullName: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadWidth:enum'
        name: ArrowheadWidth
        fullName: Excel.ArrowheadWidth
      - name: ' | "Narrow" | "Medium" | "Wide"'
        fullName: ' | "Narrow" | "Medium" | "Wide"'
  - uid: 'excel!Excel.Shape:interface'
    name: Shape
    fullName: Excel.Shape
  - uid: 'excel!Excel.Line#connectorType~0:complex'
    name: ConnectorType | "Straight" | "Elbow" | "Curve"
    fullName: Excel.ConnectorType | "Straight" | "Elbow" | "Curve"
    spec.typeScript:
      - uid: 'excel!Excel.ConnectorType:enum'
        name: ConnectorType
        fullName: Excel.ConnectorType
      - name: ' | "Straight" | "Elbow" | "Curve"'
        fullName: ' | "Straight" | "Elbow" | "Curve"'
  - uid: 'excel!Excel.Line#endArrowheadLength~0:complex'
    name: ArrowheadLength | "Short" | "Medium" | "Long"
    fullName: Excel.ArrowheadLength | "Short" | "Medium" | "Long"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadLength:enum'
        name: ArrowheadLength
        fullName: Excel.ArrowheadLength
      - name: ' | "Short" | "Medium" | "Long"'
        fullName: ' | "Short" | "Medium" | "Long"'
  - uid: 'excel!Excel.Line#endArrowheadStyle~0:complex'
    name: |-
      | ArrowheadStyle
                  | "None"
                  | "Triangle"
                  | "Stealth"
                  | "Diamond"
                  | "Oval"
                  | "Open"
    fullName: |-
      | Excel.ArrowheadStyle
                  | "None"
                  | "Triangle"
                  | "Stealth"
                  | "Diamond"
                  | "Oval"
                  | "Open"
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: 'excel!Excel.ArrowheadStyle:enum'
        name: ArrowheadStyle
        fullName: Excel.ArrowheadStyle
      - name: |2-

                      | "None"
                      | "Triangle"
                      | "Stealth"
                      | "Diamond"
                      | "Oval"
                      | "Open"
        fullName: |2-

                      | "None"
                      | "Triangle"
                      | "Stealth"
                      | "Diamond"
                      | "Oval"
                      | "Open"
  - uid: 'excel!Excel.Line#endArrowheadWidth~0:complex'
    name: ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    fullName: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
    spec.typeScript:
      - uid: 'excel!Excel.ArrowheadWidth:enum'
        name: ArrowheadWidth
        fullName: Excel.ArrowheadWidth
      - name: ' | "Narrow" | "Medium" | "Wide"'
        fullName: ' | "Narrow" | "Medium" | "Wide"'