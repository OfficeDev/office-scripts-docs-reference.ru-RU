### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.BindingCollection:interface'
    summary: 'Представляет коллекцию всех объектов привязки, включенных в книгу.'
    name: Excel.BindingCollection
    fullName: Excel.BindingCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.BindingCollection#add:member(1)'
      - 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
      - 'excel!Excel.BindingCollection#addFromSelection:member(1)'
      - 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.BindingCollection#load:member(1)'
  - uid: 'excel!Excel.BindingCollection#add:member(1)'
    summary: Добавляет привязку к определенному объекту Range.
    name: 'add(range, bindingType, id)'
    fullName: 'add(range, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        add(
                    range: Range | string,
                    bindingType: BindingType,
                    id: string
                ): Binding;
      return:
        type:
          - 'excel!Excel.Binding:interface'
        description: ''
      parameters:
        - id: range
          description: 'Range to bind the binding to. May be an Excel Range object, or a string. If string, must contain the full address, including the sheet name'
          type:
            - 'excel!Excel.BindingCollection#add~0:complex'
        - id: bindingType
          description: Тип привязки. Обратитесь к разделу Excel. BindingType.
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: Имя привязки.
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromNamedItem:member(1)'
    summary: 'Добавляет новую привязку с учетом именованного элемента в книге. Если именованный элемент ссылается на несколько областей, возвращается ошибка "Инвалидреференце".'
    name: 'addFromNamedItem(name, bindingType, id)'
    fullName: 'addFromNamedItem(name, bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        addFromNamedItem(
                    name: string,
                    bindingType: BindingType,
                    id: string
                ): Binding;
      return:
        type:
          - 'excel!Excel.Binding:interface'
        description: ''
      parameters:
        - id: name
          description: 'Имя элемента, на основе которого создается привязка.'
          type:
            - string
        - id: bindingType
          description: Тип привязки. Обратитесь к разделу Excel. BindingType.
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: Имя привязки.
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#addFromSelection:member(1)'
    summary: 'Добавляет новую привязку с учетом выделенного в настоящий момент фрагмента. Если выделенный фрагмент содержит несколько областей, возвращается ошибка "Инвалидреференце".'
    name: 'addFromSelection(bindingType, id)'
    fullName: 'addFromSelection(bindingType, id)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelection(bindingType: BindingType, id: string): Binding;'
      return:
        type:
          - 'excel!Excel.Binding:interface'
        description: ''
      parameters:
        - id: bindingType
          description: Тип привязки. Обратитесь к разделу Excel. BindingType.
          type:
            - 'excel!Excel.BindingType:enum'
        - id: id
          description: Имя привязки.
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#getItemOrNullObject:member(1)'
    summary: 'Получает объект привязки по идентификатору. Если объект привязки не существует, возвращает пустой объект.'
    name: getItemOrNullObject(id)
    fullName: getItemOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(id: string): Binding;'
      return:
        type:
          - 'excel!Excel.Binding:interface'
        description: ''
      parameters:
        - id: id
          description: Идентификатор получаемого объекта привязки.
          type:
            - string
  - uid: 'excel!Excel.BindingCollection#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.Binding:interface'
    name: Binding
    fullName: Excel.Binding
  - uid: 'excel!Excel.BindingCollection#add~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:interface'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.BindingType:enum'
    name: BindingType
    fullName: Excel.BindingType