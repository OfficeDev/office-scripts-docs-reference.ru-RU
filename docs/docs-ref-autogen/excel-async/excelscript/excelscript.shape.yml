### YamlMime:TSType
name: Excel.Shape
uid: excel!Excel.Shape:interface
package: excel!
fullName: Excel.Shape
summary: Представляет объект универсальной фигуры на листе. Фигурой может быть геометрическая фигура, линия, Группа фигур и т. д. Чтобы узнать больше об объектной модели фигур, прочтите [Работа с фигурами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-shapes)<!-- -->.
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
- name: altTextDescription
  uid: excel!Excel.Shape#altTextDescription:member
  package: excel!
  fullName: altTextDescription
  summary: Задает текст альтернативного описания для объекта Shape.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'altTextDescription: string;'
    return:
      type: string
- name: altTextTitle
  uid: excel!Excel.Shape#altTextTitle:member
  package: excel!
  fullName: altTextTitle
  summary: Указывает альтернативный текст заголовка для объекта Shape.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'altTextTitle: string;'
    return:
      type: string
- name: connectionSiteCount
  uid: excel!Excel.Shape#connectionSiteCount:member
  package: excel!
  fullName: connectionSiteCount
  summary: Возвращает количество точек соединения на фигуре.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly connectionSiteCount: number;'
    return:
      type: number
- name: fill
  uid: excel!Excel.Shape#fill:member
  package: excel!
  fullName: fill
  summary: Возвращает формат заливки фигуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly fill: ShapeFill;'
    return:
      type: <xref uid="excel!Excel.ShapeFill:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.smileyFace);\n    shape.left = 300;\n    shape.top = 100;\n    shape.height = 100;\n    shape.width = 100;\n    shape.fill.foregroundColor = \"yellow\"\n    await context.sync();\n}\n```"
- name: geometricShape
  uid: excel!Excel.Shape#geometricShape:member
  package: excel!
  fullName: geometricShape
  summary: Возвращает геометрическую фигуру, связанную с линией. Если тип фигуры отличается от GeometricShape, возникает ошибка.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly geometricShape: GeometricShape;'
    return:
      type: <xref uid="excel!Excel.GeometricShape:interface" />
- name: geometricShapeType
  uid: excel!Excel.Shape#geometricShapeType:member
  package: excel!
  fullName: geometricShapeType
  summary: Указывает тип геометрической фигуры для этой геометрической фигуры. Дополнительные сведения см. в статье Excel.GeometricShapeType. Возвращает значение null, если тип фигуры отличается от GeometricShape.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      geometricShapeType:
                  | GeometricShapeType
                  | "LineInverse"
                  | "Triangle"
                  | "RightTriangle"
                  | "Rectangle"
                  | "Diamond"
                  | "Parallelogram"
                  | "Trapezoid"
                  | "NonIsoscelesTrapezoid"
                  | "Pentagon"
                  | "Hexagon"
                  | "Heptagon"
                  | "Octagon"
                  | "Decagon"
                  | "Dodecagon"
                  | "Star4"
                  | "Star5"
                  | "Star6"
                  | "Star7"
                  | "Star8"
                  | "Star10"
                  | "Star12"
                  | "Star16"
                  | "Star24"
                  | "Star32"
                  | "RoundRectangle"
                  | "Round1Rectangle"
                  | "Round2SameRectangle"
                  | "Round2DiagonalRectangle"
                  | "SnipRoundRectangle"
                  | "Snip1Rectangle"
                  | "Snip2SameRectangle"
                  | "Snip2DiagonalRectangle"
                  | "Plaque"
                  | "Ellipse"
                  | "Teardrop"
                  | "HomePlate"
                  | "Chevron"
                  | "PieWedge"
                  | "Pie"
                  | "BlockArc"
                  | "Donut"
                  | "NoSmoking"
                  | "RightArrow"
                  | "LeftArrow"
                  | "UpArrow"
                  | "DownArrow"
                  | "StripedRightArrow"
                  | "NotchedRightArrow"
                  | "BentUpArrow"
                  | "LeftRightArrow"
                  | "UpDownArrow"
                  | "LeftUpArrow"
                  | "LeftRightUpArrow"
                  | "QuadArrow"
                  | "LeftArrowCallout"
                  | "RightArrowCallout"
                  | "UpArrowCallout"
                  | "DownArrowCallout"
                  | "LeftRightArrowCallout"
                  | "UpDownArrowCallout"
                  | "QuadArrowCallout"
                  | "BentArrow"
                  | "UturnArrow"
                  | "CircularArrow"
                  | "LeftCircularArrow"
                  | "LeftRightCircularArrow"
                  | "CurvedRightArrow"
                  | "CurvedLeftArrow"
                  | "CurvedUpArrow"
                  | "CurvedDownArrow"
                  | "SwooshArrow"
                  | "Cube"
                  | "Can"
                  | "LightningBolt"
                  | "Heart"
                  | "Sun"
                  | "Moon"
                  | "SmileyFace"
                  | "IrregularSeal1"
                  | "IrregularSeal2"
                  | "FoldedCorner"
                  | "Bevel"
                  | "Frame"
                  | "HalfFrame"
                  | "Corner"
                  | "DiagonalStripe"
                  | "Chord"
                  | "Arc"
                  | "LeftBracket"
                  | "RightBracket"
                  | "LeftBrace"
                  | "RightBrace"
                  | "BracketPair"
                  | "BracePair"
                  | "Callout1"
                  | "Callout2"
                  | "Callout3"
                  | "AccentCallout1"
                  | "AccentCallout2"
                  | "AccentCallout3"
                  | "BorderCallout1"
                  | "BorderCallout2"
                  | "BorderCallout3"
                  | "AccentBorderCallout1"
                  | "AccentBorderCallout2"
                  | "AccentBorderCallout3"
                  | "WedgeRectCallout"
                  | "WedgeRRectCallout"
                  | "WedgeEllipseCallout"
                  | "CloudCallout"
                  | "Cloud"
                  | "Ribbon"
                  | "Ribbon2"
                  | "EllipseRibbon"
                  | "EllipseRibbon2"
                  | "LeftRightRibbon"
                  | "VerticalScroll"
                  | "HorizontalScroll"
                  | "Wave"
                  | "DoubleWave"
                  | "Plus"
                  | "FlowChartProcess"
                  | "FlowChartDecision"
                  | "FlowChartInputOutput"
                  | "FlowChartPredefinedProcess"
                  | "FlowChartInternalStorage"
                  | "FlowChartDocument"
                  | "FlowChartMultidocument"
                  | "FlowChartTerminator"
                  | "FlowChartPreparation"
                  | "FlowChartManualInput"
                  | "FlowChartManualOperation"
                  | "FlowChartConnector"
                  | "FlowChartPunchedCard"
                  | "FlowChartPunchedTape"
                  | "FlowChartSummingJunction"
                  | "FlowChartOr"
                  | "FlowChartCollate"
                  | "FlowChartSort"
                  | "FlowChartExtract"
                  | "FlowChartMerge"
                  | "FlowChartOfflineStorage"
                  | "FlowChartOnlineStorage"
                  | "FlowChartMagneticTape"
                  | "FlowChartMagneticDisk"
                  | "FlowChartMagneticDrum"
                  | "FlowChartDisplay"
                  | "FlowChartDelay"
                  | "FlowChartAlternateProcess"
                  | "FlowChartOffpageConnector"
                  | "ActionButtonBlank"
                  | "ActionButtonHome"
                  | "ActionButtonHelp"
                  | "ActionButtonInformation"
                  | "ActionButtonForwardNext"
                  | "ActionButtonBackPrevious"
                  | "ActionButtonEnd"
                  | "ActionButtonBeginning"
                  | "ActionButtonReturn"
                  | "ActionButtonDocument"
                  | "ActionButtonSound"
                  | "ActionButtonMovie"
                  | "Gear6"
                  | "Gear9"
                  | "Funnel"
                  | "MathPlus"
                  | "MathMinus"
                  | "MathMultiply"
                  | "MathDivide"
                  | "MathEqual"
                  | "MathNotEqual"
                  | "CornerTabs"
                  | "SquareTabs"
                  | "PlaqueTabs"
                  | "ChartX"
                  | "ChartStar"
                  | "ChartPlus";
    return:
      type: >-
        | <xref uid="excel!Excel.GeometricShapeType:enum" />
                    | "LineInverse"
                    | "Triangle"
                    | "RightTriangle"
                    | "Rectangle"
                    | "Diamond"
                    | "Parallelogram"
                    | "Trapezoid"
                    | "NonIsoscelesTrapezoid"
                    | "Pentagon"
                    | "Hexagon"
                    | "Heptagon"
                    | "Octagon"
                    | "Decagon"
                    | "Dodecagon"
                    | "Star4"
                    | "Star5"
                    | "Star6"
                    | "Star7"
                    | "Star8"
                    | "Star10"
                    | "Star12"
                    | "Star16"
                    | "Star24"
                    | "Star32"
                    | "RoundRectangle"
                    | "Round1Rectangle"
                    | "Round2SameRectangle"
                    | "Round2DiagonalRectangle"
                    | "SnipRoundRectangle"
                    | "Snip1Rectangle"
                    | "Snip2SameRectangle"
                    | "Snip2DiagonalRectangle"
                    | "Plaque"
                    | "Ellipse"
                    | "Teardrop"
                    | "HomePlate"
                    | "Chevron"
                    | "PieWedge"
                    | "Pie"
                    | "BlockArc"
                    | "Donut"
                    | "NoSmoking"
                    | "RightArrow"
                    | "LeftArrow"
                    | "UpArrow"
                    | "DownArrow"
                    | "StripedRightArrow"
                    | "NotchedRightArrow"
                    | "BentUpArrow"
                    | "LeftRightArrow"
                    | "UpDownArrow"
                    | "LeftUpArrow"
                    | "LeftRightUpArrow"
                    | "QuadArrow"
                    | "LeftArrowCallout"
                    | "RightArrowCallout"
                    | "UpArrowCallout"
                    | "DownArrowCallout"
                    | "LeftRightArrowCallout"
                    | "UpDownArrowCallout"
                    | "QuadArrowCallout"
                    | "BentArrow"
                    | "UturnArrow"
                    | "CircularArrow"
                    | "LeftCircularArrow"
                    | "LeftRightCircularArrow"
                    | "CurvedRightArrow"
                    | "CurvedLeftArrow"
                    | "CurvedUpArrow"
                    | "CurvedDownArrow"
                    | "SwooshArrow"
                    | "Cube"
                    | "Can"
                    | "LightningBolt"
                    | "Heart"
                    | "Sun"
                    | "Moon"
                    | "SmileyFace"
                    | "IrregularSeal1"
                    | "IrregularSeal2"
                    | "FoldedCorner"
                    | "Bevel"
                    | "Frame"
                    | "HalfFrame"
                    | "Corner"
                    | "DiagonalStripe"
                    | "Chord"
                    | "Arc"
                    | "LeftBracket"
                    | "RightBracket"
                    | "LeftBrace"
                    | "RightBrace"
                    | "BracketPair"
                    | "BracePair"
                    | "Callout1"
                    | "Callout2"
                    | "Callout3"
                    | "AccentCallout1"
                    | "AccentCallout2"
                    | "AccentCallout3"
                    | "BorderCallout1"
                    | "BorderCallout2"
                    | "BorderCallout3"
                    | "AccentBorderCallout1"
                    | "AccentBorderCallout2"
                    | "AccentBorderCallout3"
                    | "WedgeRectCallout"
                    | "WedgeRRectCallout"
                    | "WedgeEllipseCallout"
                    | "CloudCallout"
                    | "Cloud"
                    | "Ribbon"
                    | "Ribbon2"
                    | "EllipseRibbon"
                    | "EllipseRibbon2"
                    | "LeftRightRibbon"
                    | "VerticalScroll"
                    | "HorizontalScroll"
                    | "Wave"
                    | "DoubleWave"
                    | "Plus"
                    | "FlowChartProcess"
                    | "FlowChartDecision"
                    | "FlowChartInputOutput"
                    | "FlowChartPredefinedProcess"
                    | "FlowChartInternalStorage"
                    | "FlowChartDocument"
                    | "FlowChartMultidocument"
                    | "FlowChartTerminator"
                    | "FlowChartPreparation"
                    | "FlowChartManualInput"
                    | "FlowChartManualOperation"
                    | "FlowChartConnector"
                    | "FlowChartPunchedCard"
                    | "FlowChartPunchedTape"
                    | "FlowChartSummingJunction"
                    | "FlowChartOr"
                    | "FlowChartCollate"
                    | "FlowChartSort"
                    | "FlowChartExtract"
                    | "FlowChartMerge"
                    | "FlowChartOfflineStorage"
                    | "FlowChartOnlineStorage"
                    | "FlowChartMagneticTape"
                    | "FlowChartMagneticDisk"
                    | "FlowChartMagneticDrum"
                    | "FlowChartDisplay"
                    | "FlowChartDelay"
                    | "FlowChartAlternateProcess"
                    | "FlowChartOffpageConnector"
                    | "ActionButtonBlank"
                    | "ActionButtonHome"
                    | "ActionButtonHelp"
                    | "ActionButtonInformation"
                    | "ActionButtonForwardNext"
                    | "ActionButtonBackPrevious"
                    | "ActionButtonEnd"
                    | "ActionButtonBeginning"
                    | "ActionButtonReturn"
                    | "ActionButtonDocument"
                    | "ActionButtonSound"
                    | "ActionButtonMovie"
                    | "Gear6"
                    | "Gear9"
                    | "Funnel"
                    | "MathPlus"
                    | "MathMinus"
                    | "MathMultiply"
                    | "MathDivide"
                    | "MathEqual"
                    | "MathNotEqual"
                    | "CornerTabs"
                    | "SquareTabs"
                    | "PlaqueTabs"
                    | "ChartX"
                    | "ChartStar"
                    | "ChartPlus"
- name: group
  uid: excel!Excel.Shape#group:member
  package: excel!
  fullName: group
  summary: Возвращает группу фигур, связанную с фигурой. Если тип фигуры отличается от GroupShape, возникает ошибка.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly group: ShapeGroup;'
    return:
      type: <xref uid="excel!Excel.ShapeGroup:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n\n    let shapeGroup = sheet.shapes.getItem(\"Group\").group;\n    shapeGroup.ungroup();\n    console.log(\"Shapes ungrouped\");\n\n    await context.sync();\n}\n```"
- name: height
  uid: excel!Excel.Shape#height:member
  package: excel!
  fullName: height
  summary: Задает высоту фигуры в пунктах. При задании с отрицательным значением или нулем в качестве входных данных создается исключение недопустимого аргумента.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'height: number;'
    return:
      type: number
- name: id
  uid: excel!Excel.Shape#id:member
  package: excel!
  fullName: id
  summary: Задает идентификатор фигуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: image
  uid: excel!Excel.Shape#image:member
  package: excel!
  fullName: image
  summary: Возвращает изображение, связанное с фигурой. Если тип фигуры отличается от Image, возникает ошибка.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly image: Image;'
    return:
      type: <xref uid="excel!Excel.Image:interface" />
- name: left
  uid: excel!Excel.Shape#left:member
  package: excel!
  fullName: left
  summary: Расстояние в пунктах от левого края фигуры до левого края листа. При задании с отрицательным значением в качестве входных данных создается исключение недопустимого аргумента.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'left: number;'
    return:
      type: number
- name: level
  uid: excel!Excel.Shape#level:member
  package: excel!
  fullName: level
  summary: Задает уровень указанной фигуры. Например, уровень 0 означает, что фигура не является частью групп; уровень 1 означает, что фигура является частью группы верхнего уровня; уровень 2 означает, что фигура является частью подгруппы верхнего уровня.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly level: number;'
    return:
      type: number
- name: line
  uid: excel!Excel.Shape#line:member
  package: excel!
  fullName: line
  summary: Возвращает линию, связанную с фигурой. Если тип фигуры отличается от Line, возникает ошибка.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly line: Line;'
    return:
      type: <xref uid="excel!Excel.Line:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    let line = shapes.getItem(\"StraightLine\").line;\n    line.beginArrowheadLength = Excel.ArrowheadLength.long;\n    line.beginArrowheadWidth = Excel.ArrowheadWidth.wide;\n    line.beginArrowheadStyle = Excel.ArrowheadStyle.oval;\n\n    line.endArrowheadLength = Excel.ArrowheadLength.long;\n    line.endArrowheadWidth = Excel.ArrowheadWidth.wide;\n    line.endArrowheadStyle = Excel.ArrowheadStyle.triangle;\n\n    await context.sync();\n}\n```"
- name: lineFormat
  uid: excel!Excel.Shape#lineFormat:member
  package: excel!
  fullName: lineFormat
  summary: Возвращает формат линии для фигуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly lineFormat: ShapeLineFormat;'
    return:
      type: <xref uid="excel!Excel.ShapeLineFormat:interface" />
- name: lockAspectRatio
  uid: excel!Excel.Shape#lockAspectRatio:member
  package: excel!
  fullName: lockAspectRatio
  summary: Указывает, заблокировано ли пропорции данной фигуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lockAspectRatio: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.getItem(\"Octagon\")\n    shape.lockAspectRatio = true;\n    shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);\n    await context.sync();\n}\n```"
- name: name
  uid: excel!Excel.Shape#name:member
  package: excel!
  fullName: name
  summary: Задает имя фигуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: parentGroup
  uid: excel!Excel.Shape#parentGroup:member
  package: excel!
  fullName: parentGroup
  summary: Задает родительскую группу этой фигуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentGroup: Shape;'
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
- name: placement
  uid: excel!Excel.Shape#placement:member
  package: excel!
  fullName: placement
  summary: Представляет способ прикрепления объекта к ячейкам под ним.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'placement: Placement | "TwoCell" | "OneCell" | "Absolute";'
    return:
      type: <xref uid="excel!Excel.Placement:enum" /> | "TwoCell" | "OneCell" | "Absolute"
- name: rotation
  uid: excel!Excel.Shape#rotation:member
  package: excel!
  fullName: rotation
  summary: Задает поворот фигуры в градусах.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rotation: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.triangle);\n    shape.left = 100;\n    shape.top = 300;\n    shape.height = 150;\n    shape.width = 200;\n    shape.rotation = 45;\n    shape.fill.clear();\n    await context.sync();\n}\n```"
- name: textFrame
  uid: excel!Excel.Shape#textFrame:member
  package: excel!
  fullName: textFrame
  summary: Возвращает объект рамки с текстом для фигуры. Только для чтения.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly textFrame: TextFrame;'
    return:
      type: <xref uid="excel!Excel.TextFrame:interface" />
- name: top
  uid: excel!Excel.Shape#top:member
  package: excel!
  fullName: top
  summary: Расстояние в пунктах от верхнего края фигуры до верхнего края листа. При задании с отрицательным значением в качестве входных данных создается исключение недопустимого аргумента.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'top: number;'
    return:
      type: number
- name: type
  uid: excel!Excel.Shape#type:member
  package: excel!
  fullName: type
  summary: Возвращает тип фигуры. Дополнительные сведения см. в статье Excel.ShapeType.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      readonly type:
                  | ShapeType
                  | "Unsupported"
                  | "Image"
                  | "GeometricShape"
                  | "Group"
                  | "Line";
    return:
      type: >-
        | <xref uid="excel!Excel.ShapeType:enum" />
                    | "Unsupported"
                    | "Image"
                    | "GeometricShape"
                    | "Group"
                    | "Line"
- name: visible
  uid: excel!Excel.Shape#visible:member
  package: excel!
  fullName: visible
  summary: Указывает, отображается ли фигура.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'visible: boolean;'
    return:
      type: boolean
- name: width
  uid: excel!Excel.Shape#width:member
  package: excel!
  fullName: width
  summary: Задает ширину фигуры в пунктах. При задании с отрицательным значением или нулем в качестве входных данных создается исключение недопустимого аргумента.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'width: number;'
    return:
      type: number
- name: zOrderPosition
  uid: excel!Excel.Shape#zOrderPosition:member
  package: excel!
  fullName: zOrderPosition
  summary: Возвращает положение указанной фигуры по оси Z. Значение 0 представляет нижнее положение по оси.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly zOrderPosition: number;'
    return:
      type: number
methods:
- name: copyTo(destinationSheet)
  uid: excel!Excel.Shape#copyTo:member(1)
  package: excel!
  fullName: copyTo(destinationSheet)
  summary: Копирует и вставляет объект Shape. Вставленная фигура копируется в то же расположение пикселя, что и эта фигура.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyTo(destinationSheet?: Worksheet | string): Shape;'
    parameters:
    - id: destinationSheet
      description: Лист, на который будет вставлен объект фигуры. Значение по умолчанию — лист скопированной фигуры.
      type: <xref uid="excel!Excel.Worksheet:interface" /> | string
    return:
      type: <xref uid="excel!Excel.Shape:interface" />
      description: ''
- name: delete()
  uid: excel!Excel.Shape#delete:member(1)
  package: excel!
  fullName: delete()
  summary: Удаляет фигуру с листа.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    context.workbook.worksheets.getItemOrNullObject(\"Shapes\").delete();\n    let sheet = context.workbook.worksheets.add(\"Shapes\");\n\n    let shapes = sheet.shapes;\n\n    // load all the shapes in the collection without loading their properties\n    shapes.load(\"items/$none\");\n    await context.sync();\n\n    shapes.items.forEach((shape) => shape.delete());\n    await context.sync();\n}\n```"
- name: getAsImage(format)
  uid: excel!Excel.Shape#getAsImage:member(1)
  package: excel!
  fullName: getAsImage(format)
  summary: 'Преобразует фигуру в изображение и возвращает изображение в виде строки в кодировке base64. Число точек на дюйм: 96. Поддерживаются только форматы `Excel.PictureFormat.BMP`<!-- -->, `Excel.PictureFormat.PNG`<!-- -->, `Excel.PictureFormat.JPEG`<!-- -->, а `Excel.PictureFormat.GIF`<!-- -->.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      getAsImage(
                  format:
                      | PictureFormat
                      | "Unknown"
                      | "Bmp"
                      | "Jpeg"
                      | "Gif"
                      | "Png"
                      | "Svg"
              ): ClientResult<string>;
    parameters:
    - id: format
      description: Задает формат изображения.
      type: "| <xref uid=\"excel!Excel.PictureFormat:enum\" />\n                | \"Unknown\"\n                | \"Bmp\"\n                | \"Jpeg\"\n                | \"Gif\"\n                | \"Png\"\n                | \"Svg\"\n        "
    return:
      type: <xref uid="excel!Excel.ClientResult:interface" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.getItem(\"Image\");\n    let result = shape.getAsImage(Excel.PictureFormat.png);\n    await context.sync();\n\n    let imageString = result.value;\n    // Your add-in would save this string as a .png file.\n    console.log(\"The image's base64-encoded string: \" + imageString);\n}\n```"
- name: incrementLeft(increment)
  uid: excel!Excel.Shape#incrementLeft:member(1)
  package: excel!
  fullName: incrementLeft(increment)
  summary: Перемещает фигуру по горизонтали на указанное число пунктов.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementLeft(increment: number): void;'
    parameters:
    - id: increment
      description: 'Приращение фигуры будет горизонтально перемещено в пункт точки. Положительное значение перемещает фигуру вправо, а отрицательное значение — влево. Если лист ориентирован справа налево, это значение изменяется на противоположный: положительные значения перемещают фигуру влево, а отрицательные — вправо.'
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.getItem(\"Square\")\n    shape.incrementLeft(-25);\n    await context.sync();\n}\n```"
- name: incrementRotation(increment)
  uid: excel!Excel.Shape#incrementRotation:member(1)
  package: excel!
  fullName: incrementRotation(increment)
  summary: Поворачивает фигуру по часовой стрелке относительно оси Z на указанное число градусов. Используйте `rotation` свойство, чтобы задать абсолютный поворот фигуры.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementRotation(increment: number): void;'
    parameters:
    - id: increment
      description: Количество градусов, на котором будет вращаться фигура. Положительное значение поворачивает фигуру по часовой стрелке; отрицательное значение поворачивает его против часовой стрелки.
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.getItem(\"Image\");\n    shape.incrementRotation(180);\n    await context.sync();\n}\n```"
- name: incrementTop(increment)
  uid: excel!Excel.Shape#incrementTop:member(1)
  package: excel!
  fullName: incrementTop(increment)
  summary: Перемещает фигуру по вертикали на указанное число пунктов.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'incrementTop(increment: number): void;'
    parameters:
    - id: increment
      description: Увеличение (в пунктах) фигура будет перемещена по вертикали. в пунктах. Положительное значение перемещает фигуру вниз и отрицательное значение перемещается вверх.
      type: number
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.getItem(\"Pentagon\")\n    shape.incrementTop(25);\n    await context.sync();\n}\n```"
- name: load(propertyNames)
  uid: excel!Excel.Shape#load:member(1)
  package: excel!
  fullName: load(propertyNames)
  summary: Добавляет в очередь команду для загрузки указанных свойств объекта. Перед чтением свойств требуется вызвать метод `context.sync()`.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): void;'
    parameters:
    - id: propertyNames
      description: Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.
      type: string | string[]
    return:
      type: void
      description: ''
- name: scaleHeight(scaleFactor, scaleType, scaleFrom)
  uid: excel!Excel.Shape#scaleHeight:member(1)
  package: excel!
  fullName: scaleHeight(scaleFactor, scaleType, scaleFrom)
  summary: Масштабирует высоту фигуры с применением указанного коэффициента. Для изображений можно указать изменение масштаба фигуры относительно исходного или текущего размера. Фигуры, не являющиеся изображениями, всегда масштабируются относительно их текущей высоты.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      scaleHeight(
                  scaleFactor: number,
                  scaleType: ShapeScaleType | "CurrentSize" | "OriginalSize",
                  scaleFrom?:
                      | ShapeScaleFrom
                      | "ScaleFromTopLeft"
                      | "ScaleFromMiddle"
                      | "ScaleFromBottomRight"
              ): void;
    parameters:
    - id: scaleFactor
      description: Задает отношение высоты фигуры после изменения ее размера и текущей или исходной высоты.
      type: number
    - id: scaleType
      description: Указывает, масштабируется ли фигура относительно исходного или текущего размера. Параметр масштабирование исходного размера работает только для изображений.
      type: <xref uid="excel!Excel.ShapeScaleType:enum" /> | "CurrentSize" | "OriginalSize"
    - id: scaleFrom
      description: Необязательный параметр. Указывает, какая часть фигуры сохраняет свое положение при масштабировании фигуры. Если этот параметр опущен, то он представляет свое положение в левом верхнем углу фигуры.
      type: "| <xref uid=\"excel!Excel.ShapeScaleFrom:enum\" />\n                | \"ScaleFromTopLeft\"\n                | \"ScaleFromMiddle\"\n                | \"ScaleFromBottomRight\"\n        "
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.getItem(\"Octagon\")\n    shape.lockAspectRatio = true;\n    shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);\n    await context.sync();\n}\n```"
- name: scaleWidth(scaleFactor, scaleType, scaleFrom)
  uid: excel!Excel.Shape#scaleWidth:member(1)
  package: excel!
  fullName: scaleWidth(scaleFactor, scaleType, scaleFrom)
  summary: Масштабирует ширину фигуры с применением указанного коэффициента. Для изображений можно указать изменение масштаба фигуры относительно исходного или текущего размера. Фигуры, не являющиеся изображениями, всегда масштабируются относительно их текущей ширины.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      scaleWidth(
                  scaleFactor: number,
                  scaleType: ShapeScaleType | "CurrentSize" | "OriginalSize",
                  scaleFrom?:
                      | ShapeScaleFrom
                      | "ScaleFromTopLeft"
                      | "ScaleFromMiddle"
                      | "ScaleFromBottomRight"
              ): void;
    parameters:
    - id: scaleFactor
      description: Задает отношение ширины фигуры после изменения ее размера и текущей или исходной ширины.
      type: number
    - id: scaleType
      description: Указывает, масштабируется ли фигура относительно исходного или текущего размера. Параметр масштабирование исходного размера работает только для изображений.
      type: <xref uid="excel!Excel.ShapeScaleType:enum" /> | "CurrentSize" | "OriginalSize"
    - id: scaleFrom
      description: Необязательный параметр. Указывает, какая часть фигуры сохраняет свое положение при масштабировании фигуры. Если этот параметр опущен, то он представляет свое положение в левом верхнем углу фигуры.
      type: "| <xref uid=\"excel!Excel.ShapeScaleFrom:enum\" />\n                | \"ScaleFromTopLeft\"\n                | \"ScaleFromMiddle\"\n                | \"ScaleFromBottomRight\"\n        "
    return:
      type: void
      description: ''
- name: setZOrder(position)
  uid: excel!Excel.Shape#setZOrder:member(1)
  package: excel!
  fullName: setZOrder(position)
  summary: Перемещает указанную фигуру вверх или вниз по оси Z в коллекции, что переносит ее вперед или назад относительно других фигур.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      setZOrder(
                  position:
                      | ShapeZOrder
                      | "BringToFront"
                      | "BringForward"
                      | "SendToBack"
                      | "SendBackward"
              ): void;
    parameters:
    - id: position
      description: Место перемещения фигуры в стеке z по отношению к другим фигурам. Дополнительные сведения см. в статье Excel. Шапезордер.
      type: "| <xref uid=\"excel!Excel.ShapeZOrder:enum\" />\n                | \"BringToFront\"\n                | \"BringForward\"\n                | \"SendToBack\"\n                | \"SendBackward\"\n        "
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Примеры\n\n```typescript\nasync function main(context: Excel.RequestContext) {\n    let sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    let shape = sheet.shapes.getItem(\"Octagon\")\n    shape.setZOrder(Excel.ShapeZOrder.sendBackward);\n    await context.sync();\n}\n```"
metadata:
  ms.openlocfilehash: 7af3ed9ec923fa2d8c5502915693f2fee9269d76
  ms.sourcegitcommit: e62d18a494e9cc7f26dac222660a2237fd073c56
  ms.translationtype: MT
  ms.contentlocale: ru-RU
  ms.lasthandoff: 11/25/2020
  ms.locfileid: "49418585"
