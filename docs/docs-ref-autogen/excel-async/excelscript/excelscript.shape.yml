### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Shape:interface'
    summary: 'Представляет объект универсальной фигуры на листе. Фигурой может быть геометрическая фигура, линия, Группа фигур и т. д. Чтобы узнать больше об объектной модели фигур, прочтите [Работа с фигурами с помощью API JavaScript для Excel](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-shapes)<!-- -->.'
    name: Excel.Shape
    fullName: Excel.Shape
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Shape#altTextDescription:member'
      - 'excel!Excel.Shape#altTextTitle:member'
      - 'excel!Excel.Shape#connectionSiteCount:member'
      - 'excel!Excel.Shape#copyTo:member(1)'
      - 'excel!Excel.Shape#delete:member(1)'
      - 'excel!Excel.Shape#fill:member'
      - 'excel!Excel.Shape#geometricShape:member'
      - 'excel!Excel.Shape#geometricShapeType:member'
      - 'excel!Excel.Shape#getAsImage:member(1)'
      - 'excel!Excel.Shape#group:member'
      - 'excel!Excel.Shape#height:member'
      - 'excel!Excel.Shape#id:member'
      - 'excel!Excel.Shape#image:member'
      - 'excel!Excel.Shape#incrementLeft:member(1)'
      - 'excel!Excel.Shape#incrementRotation:member(1)'
      - 'excel!Excel.Shape#incrementTop:member(1)'
      - 'excel!Excel.Shape#left:member'
      - 'excel!Excel.Shape#level:member'
      - 'excel!Excel.Shape#line:member'
      - 'excel!Excel.Shape#lineFormat:member'
      - 'excel!Excel.Shape#load:member(1)'
      - 'excel!Excel.Shape#lockAspectRatio:member'
      - 'excel!Excel.Shape#name:member'
      - 'excel!Excel.Shape#parentGroup:member'
      - 'excel!Excel.Shape#placement:member'
      - 'excel!Excel.Shape#rotation:member'
      - 'excel!Excel.Shape#scaleHeight:member(1)'
      - 'excel!Excel.Shape#scaleWidth:member(1)'
      - 'excel!Excel.Shape#setZOrder:member(1)'
      - 'excel!Excel.Shape#textFrame:member'
      - 'excel!Excel.Shape#top:member'
      - 'excel!Excel.Shape#type:member'
      - 'excel!Excel.Shape#visible:member'
      - 'excel!Excel.Shape#width:member'
      - 'excel!Excel.Shape#zOrderPosition:member'
  - uid: 'excel!Excel.Shape#altTextDescription:member'
    summary: Задает текст альтернативного описания для объекта Shape.
    name: altTextDescription
    fullName: altTextDescription
    langs:
      - typeScript
    type: property
    syntax:
      content: 'altTextDescription: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Shape#altTextTitle:member'
    summary: Указывает альтернативный текст заголовка для объекта Shape.
    name: altTextTitle
    fullName: altTextTitle
    langs:
      - typeScript
    type: property
    syntax:
      content: 'altTextTitle: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Shape#connectionSiteCount:member'
    summary: Возвращает количество точек соединения на фигуре.
    name: connectionSiteCount
    fullName: connectionSiteCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly connectionSiteCount: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Shape#copyTo:member(1)'
    summary: 'Копирует и вставляет объект Shape. Вставленная фигура копируется в то же расположение пикселя, что и эта фигура.'
    name: copyTo(destinationSheet)
    fullName: copyTo(destinationSheet)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'copyTo(destinationSheet?: Worksheet | string): Shape;'
      return:
        type:
          - 'excel!Excel.Shape:interface'
        description: ''
      parameters:
        - id: destinationSheet
          description: 'Лист, на который будет вставлен объект фигуры. Значение по умолчанию — лист скопированной фигуры.'
          type:
            - 'excel!Excel.Shape#copyTo~0:complex'
  - uid: 'excel!Excel.Shape#delete:member(1)'
    summary: Удаляет фигуру с листа.
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              context.workbook.worksheets.getItemOrNullObject("Shapes").delete();
              let sheet = context.workbook.worksheets.add("Shapes");

              let shapes = sheet.shapes;

              // load all the shapes in the collection without loading their properties
              shapes.load("items/$none");
              await context.sync();

              shapes.items.forEach((shape) => shape.delete());
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Shape#fill:member'
    summary: Возвращает формат заливки фигуры.
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: ShapeFill;'
      return:
        type:
          - 'excel!Excel.ShapeFill:interface'
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.smileyFace);
              shape.left = 300;
              shape.top = 100;
              shape.height = 100;
              shape.width = 100;
              shape.fill.foregroundColor = "yellow"
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Shape#geometricShape:member'
    summary: 'Возвращает геометрическую фигуру, связанную с линией. Если тип фигуры отличается от GeometricShape, возникает ошибка.'
    name: geometricShape
    fullName: geometricShape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly geometricShape: GeometricShape;'
      return:
        type:
          - 'excel!Excel.GeometricShape:interface'
  - uid: 'excel!Excel.Shape#geometricShapeType:member'
    summary: 'Указывает тип геометрической фигуры для этой геометрической фигуры. Дополнительные сведения см. в статье Excel.GeometricShapeType. Возвращает значение null, если тип фигуры отличается от GeometricShape.'
    name: geometricShapeType
    fullName: geometricShapeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'geometricShapeType: GeometricShapeType;'
      return:
        type:
          - 'excel!Excel.GeometricShapeType:enum'
  - uid: 'excel!Excel.Shape#getAsImage:member(1)'
    summary: 'Преобразует фигуру в изображение и возвращает изображение в виде строки в кодировке base64. Число точек на дюйм: 96. Поддерживаются только форматы`Excel.PictureFormat.BMP`<!-- -->, `Excel.PictureFormat.PNG`<!-- -->, `Excel.PictureFormat.JPEG`<!-- -->, а`Excel.PictureFormat.GIF`<!-- -->.'
    name: getAsImage(format)
    fullName: getAsImage(format)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsImage(format: PictureFormat): string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.getItem("Image");
              let result = shape.getAsImage(Excel.PictureFormat.png);
              await context.sync();

              let imageString = result.value;
              // Your add-in would save this string as a .png file.
              console.log("The image's base64-encoded string: " + imageString);
          }
          ```
      parameters:
        - id: format
          description: Задает формат изображения.
          type:
            - 'excel!Excel.PictureFormat:enum'
  - uid: 'excel!Excel.Shape#group:member'
    summary: 'Возвращает группу фигур, связанную с фигурой. Если тип фигуры отличается от GroupShape, возникает ошибка.'
    name: group
    fullName: group
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly group: ShapeGroup;'
      return:
        type:
          - 'excel!Excel.ShapeGroup:interface'
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");

              let shapeGroup = sheet.shapes.getItem("Group").group;
              shapeGroup.ungroup();
              console.log("Shapes ungrouped");

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Shape#height:member'
    summary: Задает высоту фигуры в пунктах. При задании с отрицательным значением или нулем в качестве входных данных создается исключение недопустимого аргумента.
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Shape#id:member'
    summary: Задает идентификатор фигуры.
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Shape#image:member'
    summary: 'Возвращает изображение, связанное с фигурой. Если тип фигуры отличается от Image, возникает ошибка.'
    name: image
    fullName: image
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly image: Image;'
      return:
        type:
          - 'excel!Excel.Image:interface'
  - uid: 'excel!Excel.Shape#incrementLeft:member(1)'
    summary: Перемещает фигуру по горизонтали на указанное число пунктов.
    name: incrementLeft(increment)
    fullName: incrementLeft(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementLeft(increment: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.getItem("Square")
              shape.incrementLeft(-25);
              await context.sync();
          }
          ```
      parameters:
        - id: increment
          description: 'Приращение фигуры будет горизонтально перемещено в пункт точки. Положительное значение перемещает фигуру вправо, а отрицательное значение — влево. Если лист ориентирован справа налево, это значение изменяется на противоположный: положительные значения перемещают фигуру влево, а отрицательные — вправо.'
          type:
            - number
  - uid: 'excel!Excel.Shape#incrementRotation:member(1)'
    summary: 'Поворачивает фигуру по часовой стрелке относительно оси Z на указанное число градусов. Используйте `rotation` свойство, чтобы задать абсолютный поворот фигуры.'
    name: incrementRotation(increment)
    fullName: incrementRotation(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementRotation(increment: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.getItem("Image");
              shape.incrementRotation(180);
              await context.sync();
          }
          ```
      parameters:
        - id: increment
          description: 'Количество градусов, на котором будет вращаться фигура. Положительное значение поворачивает фигуру по часовой стрелке; отрицательное значение поворачивает его против часовой стрелки.'
          type:
            - number
  - uid: 'excel!Excel.Shape#incrementTop:member(1)'
    summary: Перемещает фигуру по вертикали на указанное число пунктов.
    name: incrementTop(increment)
    fullName: incrementTop(increment)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'incrementTop(increment: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.getItem("Pentagon")
              shape.incrementTop(25);
              await context.sync();
          }
          ```
      parameters:
        - id: increment
          description: Увеличение (в пунктах) фигура будет перемещена по вертикали. в пунктах. Положительное значение перемещает фигуру вниз и отрицательное значение перемещается вверх.
          type:
            - number
  - uid: 'excel!Excel.Shape#left:member'
    summary: Расстояние в пунктах от левого края фигуры до левого края листа. При задании с отрицательным значением в качестве входных данных создается исключение недопустимого аргумента.
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Shape#level:member'
    summary: 'Задает уровень указанной фигуры. Например, уровень 0 означает, что фигура не является частью групп; уровень 1 означает, что фигура является частью группы верхнего уровня; уровень 2 означает, что фигура является частью подгруппы верхнего уровня.'
    name: level
    fullName: level
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly level: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Shape#line:member'
    summary: 'Возвращает линию, связанную с фигурой. Если тип фигуры отличается от Line, возникает ошибка.'
    name: line
    fullName: line
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly line: Line;'
      return:
        type:
          - 'excel!Excel.Line:interface'
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              let line = shapes.getItem("StraightLine").line;
              line.beginArrowheadLength = Excel.ArrowheadLength.long;
              line.beginArrowheadWidth = Excel.ArrowheadWidth.wide;
              line.beginArrowheadStyle = Excel.ArrowheadStyle.oval;

              line.endArrowheadLength = Excel.ArrowheadLength.long;
              line.endArrowheadWidth = Excel.ArrowheadWidth.wide;
              line.endArrowheadStyle = Excel.ArrowheadStyle.triangle;

              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Shape#lineFormat:member'
    summary: Возвращает формат линии для фигуры.
    name: lineFormat
    fullName: lineFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lineFormat: ShapeLineFormat;'
      return:
        type:
          - 'excel!Excel.ShapeLineFormat:interface'
  - uid: 'excel!Excel.Shape#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Shape#lockAspectRatio:member'
    summary: 'Указывает, заблокировано ли пропорции данной фигуры.'
    name: lockAspectRatio
    fullName: lockAspectRatio
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lockAspectRatio: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.getItem("Octagon")
              shape.lockAspectRatio = true;
              shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Shape#name:member'
    summary: Задает имя фигуры.
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Shape#parentGroup:member'
    summary: Задает родительскую группу этой фигуры.
    name: parentGroup
    fullName: parentGroup
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentGroup: Shape;'
      return:
        type:
          - 'excel!Excel.Shape:interface'
  - uid: 'excel!Excel.Shape#placement:member'
    summary: Представляет способ прикрепления объекта к ячейкам под ним.
    name: placement
    fullName: placement
    langs:
      - typeScript
    type: property
    syntax:
      content: 'placement: Placement;'
      return:
        type:
          - 'excel!Excel.Placement:enum'
  - uid: 'excel!Excel.Shape#rotation:member'
    summary: Задает поворот фигуры в градусах.
    name: rotation
    fullName: rotation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rotation: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.triangle);
              shape.left = 100;
              shape.top = 300;
              shape.height = 150;
              shape.width = 200;
              shape.rotation = 45;
              shape.fill.clear();
              await context.sync();
          }
          ```
  - uid: 'excel!Excel.Shape#scaleHeight:member(1)'
    summary: 'Масштабирует высоту фигуры с применением указанного коэффициента. Для изображений можно указать изменение масштаба фигуры относительно исходного или текущего размера. Фигуры, не являющиеся изображениями, всегда масштабируются относительно их текущей высоты.'
    name: 'scaleHeight(scaleFactor, scaleType, scaleFrom)'
    fullName: 'scaleHeight(scaleFactor, scaleType, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        scaleHeight(
                    scaleFactor: number,
                    scaleType: ShapeScaleType,
                    scaleFrom?: ShapeScaleFrom
                ): void;
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.getItem("Octagon")
              shape.lockAspectRatio = true;
              shape.scaleHeight(1.25, Excel.ShapeScaleType.currentSize);
              await context.sync();
          }
          ```
      parameters:
        - id: scaleFactor
          description: Задает отношение высоты фигуры после изменения ее размера и текущей или исходной высоты.
          type:
            - number
        - id: scaleType
          description: 'Указывает, масштабируется ли фигура относительно исходного или текущего размера. Параметр масштабирование исходного размера работает только для изображений.'
          type:
            - 'excel!Excel.ShapeScaleType:enum'
        - id: scaleFrom
          description: 'Необязательный параметр. Указывает, какая часть фигуры сохраняет свое положение при масштабировании фигуры. Если этот параметр опущен, то он представляет свое положение в левом верхнем углу фигуры.'
          type:
            - 'excel!Excel.ShapeScaleFrom:enum'
  - uid: 'excel!Excel.Shape#scaleWidth:member(1)'
    summary: 'Масштабирует ширину фигуры с применением указанного коэффициента. Для изображений можно указать изменение масштаба фигуры относительно исходного или текущего размера. Фигуры, не являющиеся изображениями, всегда масштабируются относительно их текущей ширины.'
    name: 'scaleWidth(scaleFactor, scaleType, scaleFrom)'
    fullName: 'scaleWidth(scaleFactor, scaleType, scaleFrom)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        scaleWidth(
                    scaleFactor: number,
                    scaleType: ShapeScaleType,
                    scaleFrom?: ShapeScaleFrom
                ): void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: scaleFactor
          description: Задает отношение ширины фигуры после изменения ее размера и текущей или исходной ширины.
          type:
            - number
        - id: scaleType
          description: 'Указывает, масштабируется ли фигура относительно исходного или текущего размера. Параметр масштабирование исходного размера работает только для изображений.'
          type:
            - 'excel!Excel.ShapeScaleType:enum'
        - id: scaleFrom
          description: 'Необязательный параметр. Указывает, какая часть фигуры сохраняет свое положение при масштабировании фигуры. Если этот параметр опущен, то он представляет свое положение в левом верхнем углу фигуры.'
          type:
            - 'excel!Excel.ShapeScaleFrom:enum'
  - uid: 'excel!Excel.Shape#setZOrder:member(1)'
    summary: 'Перемещает указанную фигуру вверх или вниз по оси Z в коллекции, что переносит ее вперед или назад относительно других фигур.'
    name: setZOrder(position)
    fullName: setZOrder(position)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setZOrder(position: ShapeZOrder): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Примеры

          ```typescript
          async function main(context: Excel.RequestContext) {
              let sheet = context.workbook.worksheets.getItem("Shapes");
              let shape = sheet.shapes.getItem("Octagon")
              shape.setZOrder(Excel.ShapeZOrder.sendBackward);
              await context.sync();
          }
          ```
      parameters:
        - id: position
          description: Место перемещения фигуры в стеке z по отношению к другим фигурам. Дополнительные сведения см. в статье Excel. Шапезордер.
          type:
            - 'excel!Excel.ShapeZOrder:enum'
  - uid: 'excel!Excel.Shape#textFrame:member'
    summary: Возвращает объект рамки с текстом для фигуры. Только для чтения.
    name: textFrame
    fullName: textFrame
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly textFrame: TextFrame;'
      return:
        type:
          - 'excel!Excel.TextFrame:interface'
  - uid: 'excel!Excel.Shape#top:member'
    summary: Расстояние в пунктах от верхнего края фигуры до верхнего края листа. При задании с отрицательным значением в качестве входных данных создается исключение недопустимого аргумента.
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Shape#type:member'
    summary: Возвращает тип фигуры. Дополнительные сведения см. в статье Excel.ShapeType.
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: ShapeType;'
      return:
        type:
          - 'excel!Excel.ShapeType:enum'
  - uid: 'excel!Excel.Shape#visible:member'
    summary: 'Указывает, отображается ли фигура.'
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Shape#width:member'
    summary: Задает ширину фигуры в пунктах. При задании с отрицательным значением или нулем в качестве входных данных создается исключение недопустимого аргумента.
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.Shape#zOrderPosition:member'
    summary: Возвращает положение указанной фигуры по оси Z. Значение 0 представляет нижнее положение по оси.
    name: zOrderPosition
    fullName: zOrderPosition
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly zOrderPosition: number;'
      return:
        type:
          - number
references:
  - uid: 'excel!Excel.Shape:interface'
    name: Shape
    fullName: Excel.Shape
  - uid: 'excel!Excel.Shape#copyTo~0:complex'
    name: Worksheet | string
    fullName: Excel.Worksheet | string
    spec.typeScript:
      - uid: 'excel!Excel.Worksheet:interface'
        name: Worksheet
        fullName: Excel.Worksheet
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ShapeFill:interface'
    name: ShapeFill
    fullName: Excel.ShapeFill
  - uid: 'excel!Excel.GeometricShape:interface'
    name: GeometricShape
    fullName: Excel.GeometricShape
  - uid: 'excel!Excel.GeometricShapeType:enum'
    name: GeometricShapeType
    fullName: Excel.GeometricShapeType
  - uid: 'excel!Excel.PictureFormat:enum'
    name: PictureFormat
    fullName: Excel.PictureFormat
  - uid: 'excel!Excel.ShapeGroup:interface'
    name: ShapeGroup
    fullName: Excel.ShapeGroup
  - uid: 'excel!Excel.Image:interface'
    name: Image
    fullName: Excel.Image
  - uid: 'excel!Excel.Line:interface'
    name: Line
    fullName: Excel.Line
  - uid: 'excel!Excel.ShapeLineFormat:interface'
    name: ShapeLineFormat
    fullName: Excel.ShapeLineFormat
  - uid: 'excel!Excel.Placement:enum'
    name: Placement
    fullName: Excel.Placement
  - uid: 'excel!Excel.ShapeScaleType:enum'
    name: ShapeScaleType
    fullName: Excel.ShapeScaleType
  - uid: 'excel!Excel.ShapeScaleFrom:enum'
    name: ShapeScaleFrom
    fullName: Excel.ShapeScaleFrom
  - uid: 'excel!Excel.ShapeZOrder:enum'
    name: ShapeZOrder
    fullName: Excel.ShapeZOrder
  - uid: 'excel!Excel.TextFrame:interface'
    name: TextFrame
    fullName: Excel.TextFrame
  - uid: 'excel!Excel.ShapeType:enum'
    name: ShapeType
    fullName: Excel.ShapeType