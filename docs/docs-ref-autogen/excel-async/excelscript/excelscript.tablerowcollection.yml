### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableRowCollection:interface'
    summary: |-
      Представляет коллекцию всех строк, включенных в таблицу.

      Обратите внимание, что в отличие от диапазонов или столбцов, которые будут подстраиваться при добавлении новых строк и столбцов перед ними, объект TableRow представляет физическое расположение строки таблицы, но не данные. То есть, если данные сортируются или добавляются новые строки, строка таблицы по-прежнему будет направляться на индекс, для которого она была создана.
    name: Excel.TableRowCollection
    fullName: Excel.TableRowCollection
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.TableRowCollection#add:member(1)'
      - 'excel!Excel.TableRowCollection#count:member'
      - 'excel!Excel.TableRowCollection#getCount:member(1)'
      - 'excel!Excel.TableRowCollection#getItemAt:member(1)'
      - 'excel!Excel.TableRowCollection#load:member(1)'
  - uid: 'excel!Excel.TableRowCollection#add:member(1)'
    summary: |-
      Добавляет одну или несколько строк в таблицу. Возвращается объект, находящийся над новыми строками.

      Обратите внимание, что в отличие от диапазонов или столбцов, которые будут подстраиваться при добавлении новых строк и столбцов перед ними, объект TableRow представляет физическое расположение строки таблицы, но не данные. То есть, если данные сортируются или добавляются новые строки, строка таблицы по-прежнему будет направляться на индекс, для которого она была создана.
    name: 'add(index, values)'
    fullName: 'add(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        add(
                    index?: number,
                    values?:
                        | Array<Array<boolean | string | number>>
                        | boolean
                        | string
                        | number
                ): TableRow;
      return:
        type:
          - 'excel!Excel.TableRow:interface'
        description: ''
      parameters:
        - id: index
          description: 'Необязательный параметр. Определяет относительную позицию новой строки. Если задано значение null или -1, столбец добавляется в конце. Все строки ниже вставляемой строки сдвигаются вниз. Используется нулевой индекс.'
          type:
            - number
        - id: values
          description: Необязательный параметр. Двухмерный массив неформатированных значений строки таблицы.
          type:
            - 'excel!Excel.TableRowCollection#add~0:complex'
  - uid: 'excel!Excel.TableRowCollection#count:member'
    summary: Возвращает количество строк в таблице.
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableRowCollection#getCount:member(1)'
    summary: Получает количество строк в таблице.
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableRowCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableRowCollection#getItemAt:member(1)'
    summary: |-
      Получает строку на основании ее позиции в коллекции.

      Обратите внимание, что в отличие от диапазонов или столбцов, которые будут подстраиваться при добавлении новых строк и столбцов перед ними, объект TableRow представляет физическое расположение строки таблицы, но не данные. То есть, если данные сортируются или добавляются новые строки, строка таблицы по-прежнему будет направляться на индекс, для которого она была создана.
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): TableRow;'
      return:
        type:
          - 'excel!Excel.TableRow:interface'
        description: ''
      parameters:
        - id: index
          description: Значение индекса получаемого объекта. Используется нулевой индекс.
          type:
            - number
  - uid: 'excel!Excel.TableRowCollection#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'
references:
  - uid: 'excel!Excel.TableRow:interface'
    name: TableRow
    fullName: Excel.TableRow
  - uid: 'excel!Excel.TableRowCollection#add~0:complex'
    name: |-
      | Array<Array<boolean | string | number>>
                      | boolean
                      | string
                      | number
    fullName: |-
      | Array<Array<boolean | string | number>>
                      | boolean
                      | string
                      | number
    spec.typeScript:
      - name: '| '
        fullName: '| '
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: |-
          <boolean | string | number>>
                          | boolean
                          | string
                          | number
                  
        fullName: |-
          <boolean | string | number>>
                          | boolean
                          | string
                          | number
                  
  - uid: 'excel!Excel.TableRowCollection#getCount~0:complex'
    name: ClientResult<number>
    fullName: Excel.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!Excel.ClientResult:interface'
        name: ClientResult
        fullName: Excel.ClientResult
      - name: <number>
        fullName: <number>