### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat:interface'
    summary: Представляет формат гистограмма условного форматирования для положительной стороны панели данных.
    name: Excel.ConditionalDataBarPositiveFormat
    fullName: Excel.ConditionalDataBarPositiveFormat
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.ConditionalDataBarPositiveFormat#borderColor:member'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#fillColor:member'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#gradientFill:member'
      - 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(1)'
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#borderColor:member'
    summary: 'HTML-код цвета, представляющий цвет линии границы для формы \# RRGGBB (например, "FFA500") или в виде именованного цвета HTML (например, "Апельсин"). "" (пустая строка), если граница отсутствует или не задана.'
    name: borderColor
    fullName: borderColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#fillColor:member'
    summary: 'HTML-код цвета, представляющий цвет заливки для формы \# RRGGBB (например, "FFA500") или в виде именованного цвета HTML (например, "Апельсин").'
    name: fillColor
    fullName: fillColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fillColor: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#gradientFill:member'
    summary: 'Указывает, имеет ли гистограмма градиент.'
    name: gradientFill
    fullName: gradientFill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'gradientFill: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.ConditionalDataBarPositiveFormat#load:member(1)'
    summary: Добавляет в очередь команду для загрузки указанных свойств объекта. `context.sync()`Перед чтением свойств необходимо вызвать метод.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: propertyNames
          description: 'Строка, разделенная запятыми, или массив строк, указывающий свойства для загрузки.'
          type:
            - 'string | string[]'